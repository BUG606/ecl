ECL 11.7.1:
==========

* Bugs fixed:

 - Fixed several dozens of typos.

 - ENSURE-DIRECTORIES-EXIST did not work properly with logical pathnames.

 - EXT:SET-LIMIT with option EXT:FRAME-STACK corrupted the frame stack.

 - The array of boot-time symbols is fixed and independent of the features
   that are compiled in. This is essential for cross-compilation and also
   for sharing C code among different builds.

 - Fixed externalization of bytecodes with literals that need MAKE-LOAD-FORM.

* Visible changes:

 - When printing error messages, the condition type is shown (M. Mondor)

 - SI:TOP-LEVEL, when invoked without arguments, does not process the
   command line.

 - The command line used by EXT:PROCESS-COMMAND-ARGS is now by default
   the one stored in *COMMAND-ARGS*, and this may be "cleared" by the
   user.

 - SOCKET-MAKE-STREAM now accepts an :ELEMENT-TYPE argument.

 - When --enable-rpath is used in combination with --with-gmp-prefix, then the
   path of the GMP library is hardcoded into ECL. If the remaining libraries
   (GC, libffi) are in a similar location this will make ECL work without
   further flags, and without modifying LD_LIBRARY_PATH or DYLD_LIBRARY_PATH.

 - All arguments after the '--' command line option are stored in a global
   variable, ext:*unprocessed-ecl-command-args*.

 - In the rules passed to ext:process-command-args, :stop now implies that all
   remaining arguments including the current one are collected and passed to
   the rule code. An example of use of this option
      ;; Collect all arguments _after_ the command line option --
      ("--" 1 (setf ext:*unprocessed-ecl-command-args* (rest 1)) :stop)
      ;; Collect all arguments including the first unknown one
      ("*DEFAULTS*" 1 (setf ext:*unprocessed-ecl-command-args* 1) :stop)

 - ECL will always build, by default, with support for Unicode strings.

 - EXT:GETENV coerces its input argument to type BASE-STRING.

 - The garbage collector would reset the counters on every call to
   SI:GC-STATS. This made nested TIME calls not to work, as the statistics of
   the inner call would spoil those of the outer one. This has been fixed.

 - ECL implements CDR 6 (ext:*inspector-hook*) as described in
   http://cdr.eurolisp.org/document/6/index.html

 - ECL ships libffi together with its source tree, much like GMP and GC.

 - On POSIX platforms ECL traps SIGCHLD and uses it to update the status of
   external processes.

 - DIRECTORY accepts the keyword argument :RESOLVE-SYMLINKS.

 - Compiling files now generates C headers with the extension "eclh". This
   is done to avoid accidentally generating header files with the same name
   as those in the C library. Take for instance, float.lsp -> float.h.

 - ECL no longer relies on "git" being installed to gather the git commit id
   and setting (ext:lisp-implementation-vcs-id).

 - When building shared and statically linked libraries, ECL creates an
   extra function that performs two tasks: initializing ECL if it wasn't done
   before, and initializing the library. This can be used to create standalone
   libraries to be linked with other programs. The name of the function typically
   begins with main_dll or main_lib but it is output by ECL on screen.

 - Hash tables do no longer have implicit locking. All complex structures in
   ECL (arrays, hash tables, objects) should be dealt with sufficient care on
   the user side, just as in other programming languages, making use of
   WITH-LOCK and similar facilities.

;;; Local Variables: ***
;;; mode:text ***
;;; fill-column:79 ***
;;; End: ***
