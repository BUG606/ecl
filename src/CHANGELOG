ECL 10.2.1:
===========

* Bugs fixed:

 - DIRECTORY used stat() also on files that did not match the directory masks.

 - The syntax for matching strings in DIRECTORY is now the same as in
   PATHNAME-MATCH-P. Formerly there were small differences, the forming
   understanding characters #\? and #\\

 - Standalone executables do not require the existence of the ECLDIR directory
   to start up -- it may be required, though, for working Unicode because the
   encodings are stored there.

 - PROCESS-JOIN was exported from the wrong package.

 - PROCESS-JOIN would fail when called while a thread was being started.

 - The output values of a process or thread are now collected in the process
   object and returned by PROCESS-JOIN.

 - The interrupt servicing thread must explicitely include the interrupt signal
   among the ones it captures. Otherwise it will never be interrupted itself.

 - No longer style warnings about removal of a variable when this variable was
   previously declared as ignorable.

 - Internal variable MP:*ALLOW-WITH-INTERRUPTS* was not declared special.

 - The compiler now understands function type proclamations with &optional
   values.

 - The compiler now uses THE forms with a VALUES type.

* Visible changes:

 - Significant speedup in access to hash tables of up to 30% by writing
   specialized loops for EQ, EQL, EQUAL, EQUALP and package hash tables.

 - New function EXT:ENVIRON returns the list of strings that makes up the
   process environment. This is the equivalent of POSIX (char **environ)
   and Windows' GetEnvironmentStrings.

 - EXT:RUN-PROGRAM now accepts a keyword argument, :ENVIRON, which is a
   list of strings configuring the environment of the child process.

 - EXT:RUN-PROGRAM returns as second value an EXT:EXTERNAL-PROCESS structure,
   which supports the queries EXT:EXTERNAL-PROCESS-{PID,INPUT,OUTPUT,STATUS},
   following CCL's conventions.

 - New function EXT:EXTERNAL-PROCESS-WAIT to wait indefinitely or simply query
   the status of a process.

 - ECL implements a new garbage collector marking mode which at the overhead of
   one word per object achieves precise marking of heap objects, reducing
   accidental data retention and improving the time spent in garbage
   collection.

 - ECL now ships with ASDF version 1.604

 - The variables C:*USER-CC-FLAGS* and C:*USER-LD-FLAGS* are lists of strings
   which can be customized by the user to change the behavior of the C compiler
   and the linker. Note, however, that the flags that ECL uses may take
   priority.

 - In the C code we are beginning to use GCC's attributes (__attribute__) and
   branch annotation (__builtin_expect) to decrease the size of code that
   checks for errors and improve overall speed.

 - When printing compiler notes, instead of printing the macroexpanded form,
   ECL now prints the toplevel form, as follows
    ;;; Warning: in file src:lsp;autoload.lsp.NEWEST, position 1178 and top form
    ;;;   (DEFMACRO WITH-COMPILATION-UNIT (OPTIONS &REST BODY) ...)
    ;;; The variable OPTIONS is not used.


;;; Local Variables: ***
;;; mode:text ***
;;; fill-column:79 ***
;;; End: ***
