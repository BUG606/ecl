ECL 0.9l-p1:
============

* Visible changes:

 - The compiler now signals compiler-error, compiler-warning and compiler-note
   for errors, warnings and notes, respectively.

 - Printing of compiler messages is now ruled by *COMPILE-PRINT*, *COMPILE-VERBOSE*
   and *SUPPRESS-COMPILER-MESSAGES*. The latter is either NIL or a valid lisp type
   which denotes which compiler messages are suppressed. If *SUPPRESS-COMPILER-MESSAGES*
   is NIL and *COMPILE-VERBOSE* is NIL, then no messages are shown.

 - *SUPPRESS-COMPILER-NOTES* and *SUPPRES-COMPILER-WARNINGS* are deprecated and
   will be removed in next release.

 - ECL allows the user to set up handlers for different compiler conditions,
   including errors, warnings and simple notes. The recommended procedure is to
   use HANDLER-BIND and _NOT_ to transfer control out of the compilation
   environment, but to defer to the default handlers or use the restarts ABORT
   and MUFFLE-WARNING.

	(use-package :c)
	(let ((warnings nil))
	  (handler-bind ((compiler-message #'(lambda (c)
					       (push c warnings))))
	    (compile-file "foo.lsp" :verbose nil :print nil))
	  (format t "~&;;; Printing compiler messages")
	  (loop for m in (nreverse warnings)
	     for i from 0
	     do (format t "~&~@<;;; ~@;Message #~D~%~A~:>" i m)))

* Bugs fixed:

 - The optimizer for COERCE might enter an infinite loop for certain
   type intervals.

 - The sharp macros #n# and #n=... did not work well with arrays of an
   specialized type.

 - Deactivate --enable-asmapply by default, because it is still an experimental
   feature.

 - In compiled files, externalize package objects using FIND-PACKAGE.

 - In RUN-PROGRAM, there were two bugs: first, the keyword :WAIT was not
   defined in the C core and caused an error when used; second, if the output
   stream was missing or directed to the standard output, it would fail.

;;; Local Variables: ***
;;; mode:text ***
;;; fill-column:79 ***
;;; End: ***
