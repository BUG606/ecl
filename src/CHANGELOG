ECL 9.8.1:
==========

* Ports:

 - The MSVC port now boots also when built without support for Unicode.

 - The mingw32 port builds without threads. For multithreading, the user will
   have to build version 7.2-alpha2 of the garbage collector manually.

 - The NetBSD port builds with default values using the garbage collector
   in the pkgsrc distribution.

 - Solaris/Sparc now builds with the given libraries (GMP and Boehm).

* Compiler:

 - The compiler now understands FFI types :[u]int{8,16,32,64}-t.

 - The FFI code emitted to convert from a lisp type to :uint or :unsigned-int
   rejected bignum inputs, even if they were in the range from 0 to UINT_MAX.
   Similar problem with :int

* Visible changes:

 - New functions ecl_make_[u]int(), ecl_make_[u]long(), ecl_to_[u]int(),
   ecl_to_[u]long(), ecl_to_bool(), ecl_make_bool(), convert between C types
   and cl_object.

 - The C structures ecl_array, ecl_vector, ecl_base_string and ecl_string have
   changed. Instead of using bitfields for hasfillp and adjustable we now
   use a single integer field, and handle the bits manually. See the
   new macros ECL_ADJUSTABLE_ARRAY_P and ECL_ARRAY_HAS_FILL_POINTER_P.

 - Four new command-line arguments, --encoding, --input-encoding,
   --output-encoding and --error-encoding, allow the user to change the 
   external formats of the default streams.

 - For places defined with the simple form of DEFSETF, SETF now produces
   a simpler expansion, without a surrounding LET* form.

 - The dynamic FFI is now implemented using libffi. This extends the portability
   and removes the previous, error prone implementation.

 - A new function, (SI:SAFE-EVAL form env &optional error-value), can be used
   to evaluate lisp forms in a safe way. If supplied three values, when an
   error happens, it returns ERROR-VALUE; otherwise it will invoke a debugger.

 - Two new functions, ecl_read_from_cstring(s) and ecl_read_from_cstring(s,v)
   read an object from a C string (char *). The first one is unsafe and will
   enter a debugger when there is a syntax error. The second one will return V
   when an error happens.

* Bugs fixed:

 - SI:GET-LIBRARY-PATHNAME did not work properly in Windows.

 - STEP did not work properly because the bytecompiler introduced an extra
   opcode after STEPCALL.

 - --enable-slow-config works again.

;;; Local Variables: ***
;;; mode:text ***
;;; fill-column:79 ***
;;; End: ***
