dnl
dnl  This is an autoconf script.
dnl  To rebuild the `configure' script from this, execute the command
dnl 	autoconf
dnl  in the directory containing this script.
dnl
dnl  AUTOCONF configuration for ECLS
dnl  Giuseppe Attardi 25.1.1994
dnl
dnl  configure.in    ---<autoconf>--->> configure
dnl
dnl                      _____
dnl  configure                \
dnl  src/h/config.h.in   ----<sh>---->> $(machine)/h/config.h
dnl  src/*/Makefile.in   _____/         $(machine)/*/Makefile
dnl
dnl  $(machine)/Makefile ---<make>--->> ecls
dnl
dnl
AC_INIT(configure.in)
AC_PREREQ(2.1)		# You must have autoconf version 2.1 or later.

###
### Make sure we do not configure within source directory
###
if test -f configure; then
echo "***"
echo "*** This program cannot be built within the source directory ***"
echo "***"
exit 2;
fi

dnl Set the version number. This seems the best place to keep it.
ECLS_VERSION=0.3
AC_SUBST(ECLS_VERSION)

dnl Guess operating system of host. We do not allow cross-compiling.
AC_CANONICAL_HOST

AC_CONFIG_HEADER(h/config.h)
AC_SUBST(host)
AC_SUBST(bindir)
AC_SUBST(mandir)
AC_SUBST(infodir)
AC_SUBST(builddir)
AC_SUBST(top_srcdir)
AC_SUBST(TKLIBS)
AC_ARG_ENABLE(boehm,
	[  --enable-boehm	  Enable Boehm & Weiser's garbage collector.],
	boehm="$enable_boehm")
dnl AC_ARG_ENABLE(profile,
dnl 	[  --enable-profile 	  Enable profiling tool.],
dnl 	profile="$enable_profile")
dnl AC_ARG_ENABLE(tk,
dnl 	[  --enable-tk		  Include Tk.],
dnl 	tk="$enable_tk")
dnl AC_ARG_ENABLE(clx,
dnl 	[  --enable-clx		  Include CLX.],
dnl 	clx="$enable_clx")
AC_ARG_ENABLE(tcp,
	[  --enable-tcp		  Include socket interface.],
	tcp="$enable_tcp")
AC_ARG_ENABLE(gmp,
	[  --enable-local-gmp	  Use already installed GMP library.],
	gmp="$enable_local_gmp")
AC_ARG_WITH(gmp,
	[  --with-gmp[=args]	  Configure supplied GMP library with arguments.],
	[gmp_flags=$withval; enable_local_gmp=no],
	gmp_flags="")
dnl AC_ARG_ENABLE(locative,
dnl 	[  --enable-locative	  Include locative support.],
dnl 	locative="$enable_locative")
dnl AC_ARG_ENABLE(threads,
dnl 	[  --enable-threads	  Include the multiple thread facility.],
dnl 	threads="$enable_threads")
dnl AC_ARG_ENABLE(runtime,
dnl 	[  --enable-runtime	  Build a RunTime Lisp with no compiler.],
dnl 	runtime="$enable_runtime")

### ----------------------------------------------------------------------
###           Checks for programs
###
AC_PROG_CC	      # sets variable CC
if test "$GCC" != "yes"; then
  AC_MSG_ERROR(Cannot build ECLS without GCC)
fi
AC_PROG_CPP           # sets variable CPP
AC_PROG_RANLIB        # sets variable RANLIB
AC_PROG_INSTALL       # sets variables INSTALL, INSTALL_DATA, INSTALL_PROGRAM
AC_PROG_LN_S          # sets variable LN_S
[
#### Some command variations:

if test ${host} = MSDOS -o ${host} = GO32 ; then
 RM="deltree /y"
 CP="copy"
 MV="move"
 if test ${host} = MSDOS ; then
   RUN="emx "
  else
   RUN="go32 "
  fi
else
 RM="rm -f"
 CP="cp"
 MV="mv"
 RUN="./"
fi
]
AC_SUBST(CP)
AC_SUBST(RM)
AC_SUBST(MV)
AC_SUBST(RUN)
AC_SUBST(CFLAGS)
AC_SUBST(LSPCFLAGS)
AC_SUBST(CLIBS)
AC_SUBST(LDFLAGS)
AC_SUBST(SHARED_LDFLAGS)
AC_SUBST(architecture)
AC_SUBST(software_type)
AC_SUBST(software_version)

dnl ----------------------------------------------------------------------
dnl           checks for UNIX variants that set DEFS
dnl
AC_CHECK_LIB(sun, getpwnam)         # on IRIX adds -lsun

dnl ----------------------------------------------------------------------
dnl           checks for header files
dnl
dnl AC_CHECK_HEADERS(unistd.h stdlib.h stdarg.h string.h)
AC_CHECK_HEADERS(sys/resource.h)
AC_CHECK_HEADERS(sys/utsname.h)
AC_CHECK_HEADERS(float.h)
AC_CHECK_FUNCS(nanosleep)
AC_ISC_POSIX

dnl ----------------------------------------------------------------------
dnl		Establish some default values
dnl
ECLS_MAKE_ABSOLUTE_SRCDIR()
ECLS_GUESS_HOST_OS()
ECLS_PROCESS_MACHINES_H()

dnl ----------------------------------------------------------------------
dnl		Set options
dnl
[
if test "x$prefix" = "xNONE"; then prefix=${ac_default_prefix}; fi
if test "x$exec_prefix" = "xNONE"; then exec_prefix=${prefix}; fi
bindir="${exec_prefix}/bin"
libdir="${exec_prefix}/lib/ecls"
mandir="${prefix}/man/man1"
infodir="${prefix}/info"
builddir=`pwd`

if [ $profile ] ; then
 if [ ${host} = linux ] ; then
 LIBS="${LIBS} -lgmon"
 fi
fi
if [ $tk ] ; then
 TKLIBS="-ltk -ltcl -lXpm @XLIBS@"
fi
]
CLIBS="${CLIBS} -lm"
test "${boehm}" && CLIBS="-lgc ${CLIBS}"
test "${boehm}" && AC_DEFINE(GBC_BOEHM)
AC_MSG_CHECKING(for clos)
AC_MSG_RESULT([${clos}])
test "${tk}" && AC_DEFINE(TK)
test "${clx}" && AC_DEFINE(CLX)
test "${tcp}" -o "${clx}" && AC_DEFINE(TCP)
test "${locative}" && AC_DEFINE(LOCATIVE)
test "${threads}" && AC_DEFINE(THREADS)
test "${runtime}" && AC_DEFINE(RUNTIME)
test "${profile}" && AC_DEFINE(PROFILE)

dnl ----------------------------------------------------------------------
dnl		Study the call conventions
dnl
ECLS_STACK_DIRECTION()
ECLS_ARGS_ARRAY()

dnl ---------------------------------------------------------------------
dnl		Check the appropiate type for cl_fixnum/cl_index
dnl
ECLS_FIXNUM_TYPE()

dnl		      # DEFS HAVE_UNISTD_H, HAVE_STDLIB_H, HAVE_STDARG_H
dnl		      # and HAVE_STRING_H
dnl AC_DIR_HEADER         # directory reading functions, DEFS VOID_CLOSEDIR
dnl
dnl           checks for typedefs
dnl
dnl AC_TYPE_SIZE_T         # DEFS size_t
dnl AC_TYPE_PID_T          # DEFS pid_t
dnl AC_TYPE_UID_T          # DEFS uid_t, gid_t
dnl AC_TYPE_OFF_T	   # DEFS off_t
dnl
dnl           checks for functions and declarations
dnl
dnl           checks for compiler characteristics
dnl
AC_C_BIGENDIAN    	   # DEFS WORDS_BIGENDIAN
dnl AC_C_CONST             # DEFS const
dnl AC_C_CHAR_UNSIGNED     # DEFS __CHAR_UNSIGNED__ if char is unsigned

dnl ---------------------------------------------------------------------
dnl	      X11 stuff
dnl
AC_PATH_X
AC_PATH_XTRA
 
XINCLUDES=""
XLIBS=""
 
if test "$x_includes" != "" 
then 
  XINCLUDES=-I$x_includes
fi
 
if test "$x_libraries" != ""
then
   XLIBS="-L$x_libraries"
fi

AC_SUBST(XINCLUDES)
AC_SUBST(XLIBS)

XLIBS="$XLIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"

dnl ---------------------------------------------------------------------
dnl		GNU multiprecision library
dnl
echo -n "checking for gmp..."
if test "$enable_local_gmp" = "yes"; then
AC_DEFINE(HAVE_LOCAL_GMP)
echo "use local $enable_local_gmp"
else
echo "configuring gmp"
(test -d gmp && rm -rf gmp; mkdir gmp; cd gmp; $srcdir/gmp/configure $gmp_flags)
fi
CLIBS="-lgmp ${CLIBS}"

dnl ---------------------------------------------------------------------
dnl		Final pass over configuration files
dnl
AC_OUTPUT(h/config.h compile.lsp compile2.lsp compile_rest.lsp bare.lsp
 lsp/config.lsp cmp/cmpcfg.lsp lsp/load.lsp clos/load.lsp cmp/load.lsp
 ../Makefile Makefile c/Makefile doc/Makefile
 tk/Makefile clx/defsys.lsp tests/Makefile ansi-tests/Makefile gabriel/Makefile
 lsp/defsys.lsp cmp/defsys.lsp clos/defsys.lsp gc/Makefile,

# Fix machine dependencies in Makefiles
CPP=`grep "^s%@CPP@%" config.status | sed -e "s/^s%@CPP@%//g" -e "s/%g$//g"`
# Prefer cpp since it does not remove backslash newline
test -x /lib/cpp && CPP=/lib/cpp
# Get back the value for host:
host=`grep "^s%@host@" config.status | sed -e "s/s%@host@%//" -e "s/%g//"`

# Can't use @host@ directly in Makefile's or CPP will replace with 1
SUBDIR_MAKEFILES=`grep SUBDIR_MAKEFILES= Makefile | sed -e "s/SUBDIR_MAKEFILES=//"`
for mf in lsp/config.lsp compile.lsp compile2.lsp compile_rest.lsp bare.lsp\
     lsp/load.lsp cmp/load.lsp clos/load.lsp cmp/cmpcfg.lsp \
     Makefile ${SUBDIR_MAKEFILES}; do
     echo updating $mf
     # pull in configuration #defines, but omit #includes
     cat h/config.h | \
	grep -v '^# *include' > junk.c
     sed -e '/^#  */d' $mf >> junk.c
     ${CPP} -P -D${host} junk.c | \
     sed -e "s/@MACHINE@/${host}/" \
	 -e 's/^#.*//' -e 's/^[ 	][ 	]*$//' -e 's/^ /	/' | \
     sed -n -e '/^..*$/p' > $mf
     rm -f junk.c
done
echo updating ../Makefile
# Fix srcdir and VPATH
sed -e "s/@MACHINE@/${host}/" -e "s%src/\.\.$%src%" ../Makefile > foo
mv foo ../Makefile
# Fix for GNU make: does not help
#touch Makefile
)
