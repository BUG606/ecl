#
#			Makefile for ECL core library
#
top_srcdir= @top_srcdir@
srcdir	= @srcdir@
VPATH	= @srcdir@

# Programs used by "make":
#
CC	= @CC@
DEFS	= -D@host@
CFLAGS	= -c -I../h -I$(HDIR) @BOEHM_HEADERS@ @CFLAGS@ $(DEFS)

SHELL	= /bin/sh
RM	= @RM@
EXE	= @EXEEXT@
DPP	= ./dpp$(EXE)

# Data for installation
#
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
libdir	= @libdir@

# Files

HDIR	= $(top_srcdir)/h
HFILES	= ../h/config.h $(HDIR)/ecl.h $(HDIR)/ecl-cmp.h\
	$(HDIR)/machines.h $(HDIR)/object.h $(HDIR)/cs.h $(HDIR)/stacks.h\
	$(HDIR)/external.h $(HDIR)/lisp_external.h $(HDIR)/eval.h\
	$(HDIR)/number.h $(HDIR)/page.h $(HDIR)/unify.h\
	$(HDIR)/lwp.h $(HDIR)/critical.h
OBJS	= main.o symbol.o package.o list.o\
	apply.o eval.o interpreter.o compiler.o disassembler.o \
	clos.o instance.o gfun.o reference.o character.o\
	file.o read.o print.o error.o string.o cfun.o\
	typespec.o assignment.o \
	predicate.o big.o number.o\
	num_pred.o num_comp.o num_arith.o num_sfun.o num_co.o\
	num_log.o num_rand.o array.o sequence.o cmpaux.o\
	macros.o backq.o stacks.o \
	time.o unixint.o\
	mapfun.o multival.o hash.o format.o pathname.o\
	structure.o load.o unixfsys.o unixsys.o \
	all_keywords.o all_symbols.o all_functions.o init.o @EXTRA_OBJS@

.SUFFIXES: .c .o .d

.c.o: $(HFILES)
	$(CC) $(CFLAGS) -o $@ $<
.d.c: $(DPP) $(HFILES)
	$(DPP) $< $@

all:	$(DPP) ../libecl.a cinit.o
.PHONY:	all

install: $(HFILES)
	for i in $(HFILES); do $(INSTALL_DATA) $$i $(PREFIX)$(libdir)/h; done

../libecl.a: $(OBJS)
	ar cr $@ $(OBJS)
	ranlib $@

clean:
	$(RM) *.c $(OBJS) ../libecl.a cinit.o core a.out

# Build rules

$(DPP): $(srcdir)/dpp.c
	$(CC) @CFLAGS@ -I$(HDIR) $(srcdir)/dpp.c  -o $@

#
# Some files may break due to gcc optimizations
#
#apply.o: apply.c $(HFILES) $(HDIR)/cs.h
# dangerous to optimize due to assembler hack
#	$(CC) $(CFLAGS) -O0 -g apply.c -o $@
assignment.o: assignment.c $(HFILES)
	$(CC) $(CFLAGS) -g assignment.c -o $@
gbc.o: gbc.c $(HFILES)
	$(CC) $(CFLAGS) -g gbc.c -o $@
