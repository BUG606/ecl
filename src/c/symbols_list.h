#ifdef DPP
#define SW(a,b,c) a
#else
#define SW(a,b,c) {{a, b, c}}
#endif

#ifdef DPP
struct {
	const char *name;
}
#else
cl_symbol_initializer
#endif
cl_symbols[] = {

SW("NIL", CL_ORDINARY, NULL),
SW("T", CL_ORDINARY, NULL),

/* LISP PACKAGE */
SW("&ALLOW-OTHER-KEYS", CL_ORDINARY, &clSAallow_other_keys),
SW("&AUX", CL_ORDINARY, &clSAaux),
SW("&BODY", CL_ORDINARY, NULL),
SW("&ENVIRONMENT", CL_ORDINARY, NULL),
SW("&KEY", CL_ORDINARY, &clSAkey),
SW("&OPTIONAL", CL_ORDINARY, &clSAoptional),
SW("&REST", CL_ORDINARY, &clSArest),
SW("&WHOLE", CL_ORDINARY, NULL),
SW("+", CL_SPECIAL, NULL),
SW("++", CL_SPECIAL, NULL),
SW("+++", CL_SPECIAL, NULL),
SW("-", CL_SPECIAL, NULL),
SW("*", CL_SPECIAL, &clV),
SW("**", CL_SPECIAL, NULL),
SW("***", CL_SPECIAL, NULL),
SW("/", CL_SPECIAL, &clV),
SW("//", CL_SPECIAL, NULL),
SW("///", CL_SPECIAL, NULL),
SW("*COMPILE-PRINT*", CL_SPECIAL, NULL),
SW("*COMPILE-VERBOSE*", CL_SPECIAL, NULL),
SW("*DEBUG-IO*", CL_SPECIAL, &clVdebug_io),
SW("*DEFAULT-PATHNAME-DEFAULTS*", CL_SPECIAL, &clVdefault_pathname_defaults),
SW("*ERROR-OUTPUT*", CL_SPECIAL, &clVerror_output),
SW("*FEATURES*", CL_SPECIAL, &clVfeatures),
SW("*GENSYM-COUNTER*", CL_SPECIAL, &clVgensym_counter),
SW("*LOAD-PRINT*", CL_SPECIAL, &clVload_print),
SW("*LOAD-VERBOSE*", CL_SPECIAL, &clVload_verbose),
SW("*MACROEXPAND-HOOK*", CL_SPECIAL, &clVmacroexpand_hook),
SW("*MODULES*", CL_SPECIAL, NULL),
SW("*PACKAGE*", CL_SPECIAL, &clVpackage),
SW("*PRINT-ARRAY*", CL_SPECIAL, &clVprint_array),
SW("*PRINT-BASE*", CL_SPECIAL, &clVprint_base),
SW("*PRINT-CASE*", CL_SPECIAL, &clVprint_case),
SW("*PRINT-CIRCLE*", CL_SPECIAL, &clVprint_circle),
SW("*PRINT-ESCAPE*", CL_SPECIAL, &clVprint_escape),
SW("*PRINT-GENSYM*", CL_SPECIAL, &clVprint_gensym),
SW("*PRINT-LENGTH*", CL_SPECIAL, &clVprint_length),
SW("*PRINT-LEVEL*", CL_SPECIAL, &clVprint_level),
SW("*PRINT-PRETTY*", CL_SPECIAL, &clVprint_pretty),
SW("*PRINT-RADIX*", CL_SPECIAL, &clVprint_radix),
SW("*QUERY-IO*", CL_SPECIAL, &clVquery_io),
SW("*RANDOM-STATE*", CL_SPECIAL, &clVrandom_state),
SW("*READ-BASE*", CL_SPECIAL, &clVread_base),
SW("*READ-DEFAULT-FLOAT-FORMAT*", CL_SPECIAL, &clVread_default_float_format),
SW("*READ-SUPPRESS*", CL_SPECIAL, &clVread_suppress),
SW("*READTABLE*", CL_SPECIAL, &clVreadtable),
SW("*STANDARD-INPUT*", CL_SPECIAL, &clVstandard_input),
SW("*STANDARD-OUTPUT*", CL_SPECIAL, &clVstandard_output),
SW("*TERMINAL-IO*", CL_SPECIAL, &clVterminal_io),
SW("*TRACE-OUTPUT*", CL_SPECIAL, &clVtrace_output),
SW("ABS", CL_ORDINARY, NULL),
SW("ACOS", CL_ORDINARY, NULL),
SW("ACOSH", CL_ORDINARY, NULL),
SW("ADJUST-ARRAY", CL_ORDINARY, NULL),
SW("ADJUSTABLE-ARRAY-P", CL_ORDINARY, NULL),
SW("AND", CL_ORDINARY, &clSand),
SW("APPEND", CL_ORDINARY, &clSappend),
SW("APPLY", CL_ORDINARY, &clSapply),
SW("APROPOS", CL_ORDINARY, NULL),
SW("APROPOS-LIST", CL_ORDINARY, NULL),
SW("ARITHMETIC-ERROR", CL_ORDINARY, &clSarithmetic_error),
SW("ARRAY", CL_ORDINARY, &clSarray),
SW("ARRAY-DIMENSION", CL_ORDINARY, NULL),
SW("ARRAY-DIMENSIONS", CL_ORDINARY, NULL),
SW("ARRAY-DIMENSION-LIMIT", CL_ORDINARY, NULL),
SW("ARRAY-ELEMENT-TYPE", CL_ORDINARY, NULL),
SW("ARRAY-HAS-FILL-POINTER-P", CL_ORDINARY, NULL),
SW("ARRAY-IN-BOUNDS-P", CL_ORDINARY, NULL),
SW("ARRAY-RANK", CL_ORDINARY, NULL),
SW("ARRAY-RANK-LIMIT", CL_CONSTANT, NULL),
SW("ARRAY-ROW-MAJOR-INDEX", CL_ORDINARY, NULL),
SW("ARRAY-TOTAL-SIZE-LIMIT", CL_CONSTANT, NULL),
SW("ASIN", CL_ORDINARY, NULL),
SW("ASINH", CL_ORDINARY, NULL),
SW("ASSERT", CL_ORDINARY, NULL),
SW("ATAN", CL_ORDINARY, NULL),
SW("ATANH", CL_ORDINARY, NULL),
SW("BASE-CHAR", CL_ORDINARY, &clSbase_char),
SW("BASE-STRING", CL_ORDINARY, NULL),
SW("BIGNUM", CL_ORDINARY, &clSbignum),
SW("BIT", CL_ORDINARY, &clSbit),
SW("BIT-AND", CL_ORDINARY, NULL),
SW("BIT-ANDC1", CL_ORDINARY, NULL),
SW("BIT-ANDC2", CL_ORDINARY, NULL),
SW("BIT-EQV", CL_ORDINARY, NULL),
SW("BIT-IOR", CL_ORDINARY, NULL),
SW("BIT-NAND", CL_ORDINARY, NULL),
SW("BIT-NOR", CL_ORDINARY, NULL),
SW("BIT-NOT", CL_ORDINARY, NULL),
SW("BIT-ORC1", CL_ORDINARY, NULL),
SW("BIT-ORC2", CL_ORDINARY, NULL),
SW("BIT-VECTOR", CL_ORDINARY, &clSbit_vector),
SW("BIT-XOR", CL_ORDINARY, NULL),
SW("BLOCK", CL_ORDINARY, &clSblock),
SW("BOOLEAN", CL_ORDINARY, NULL),
SW("BOOLE-CLR", CL_CONSTANT, NULL),
SW("BOOLE-SET", CL_CONSTANT, NULL),
SW("BOOLE-1", CL_CONSTANT, NULL),
SW("BOOLE-2", CL_CONSTANT, NULL),
SW("BOOLE-C1", CL_CONSTANT, NULL),
SW("BOOLE-C2", CL_CONSTANT, NULL),
SW("BOOLE-AND", CL_CONSTANT, NULL),
SW("BOOLE-IOR", CL_CONSTANT, NULL),
SW("BOOLE-XOR", CL_CONSTANT, NULL),
SW("BOOLE-EQV", CL_CONSTANT, NULL),
SW("BOOLE-NAND", CL_CONSTANT, NULL),
SW("BOOLE-NOR", CL_CONSTANT, NULL),
SW("BOOLE-ANDC1", CL_CONSTANT, NULL),
SW("BOOLE-ANDC2", CL_CONSTANT, NULL),
SW("BOOLE-ORC1", CL_CONSTANT, NULL),
SW("BOOLE-ORC2", CL_CONSTANT, NULL),
SW("BREAK", CL_ORDINARY, NULL),
SW("BROADCAST-STREAM", CL_ORDINARY, &clSbroadcast_stream),
SW("BYTE", CL_ORDINARY, NULL),
SW("BYTE8", CL_ORDINARY, &clSbyte8),
SW("BYTE-POSITION", CL_ORDINARY, NULL),
SW("BYTE-SIZE", CL_ORDINARY, NULL),
SW("CALL-ARGUMENTS-LIMIT", CL_CONSTANT, NULL),
SW("CCASE", CL_ORDINARY, NULL),
SW("CERROR", CL_ORDINARY, NULL),
SW("CELL-ERROR", CL_ORDINARY, &clScell_error),
SW("CHAR", CL_ORDINARY, NULL),
SW("CHAR-CODE-LIMIT", CL_CONSTANT, NULL),
SW("CHARACTER", CL_ORDINARY, &clScharacter),
SW("CHECK-TYPE", CL_ORDINARY, NULL),
SW("CIS", CL_ORDINARY, NULL),
SW("COERCE", CL_ORDINARY, NULL),
SW("COMMON", CL_ORDINARY, &clScommon),
SW("COMPILATION-SPEED", CL_ORDINARY, NULL),
SW("CONCATENATE", CL_ORDINARY, NULL),
SW("CONSTANTLY", CL_ORDINARY, NULL),
SW("COMPILE", CL_ORDINARY, &clScompile),
SW("COMPILE-FILE", CL_ORDINARY, NULL),
SW("COMPILE-FILE-PATHNAME", CL_ORDINARY, NULL),
SW("COMPILED-FUNCTION", CL_ORDINARY, &clScompiled_function),
SW("COMPILER-MACRO-FUNCTION", CL_ORDINARY, NULL),
SW("COMPLEMENT", CL_ORDINARY, NULL),
SW("COMPLEX", CL_ORDINARY, &clScomplex),
SW("CONCATENATED-STREAM", CL_ORDINARY, &clSconcatenated_stream),
SW("CONDITION", CL_ORDINARY, &clScondition),
SW("CONS", CL_ORDINARY, &clScons),
SW("COSH", CL_ORDINARY, NULL),
SW("COUNT", CL_ORDINARY, NULL),
SW("COUNT-IF", CL_ORDINARY, NULL),
SW("COUNT-IF-NOT", CL_ORDINARY, NULL),
SW("CTYPECASE", CL_ORDINARY, NULL),
SW("DEBUG", CL_ORDINARY, NULL),
SW("DECF", CL_ORDINARY, NULL),
SW("DECLAIM", CL_ORDINARY, NULL),
SW("DECLARE", CL_ORDINARY, &clSdeclare),
SW("DECLARATION", CL_ORDINARY, NULL),
SW("DECODE-UNIVERSAL-TIME", CL_ORDINARY, NULL),
SW("DEFCONSTANT", CL_ORDINARY, NULL),
SW("DEFINE-COMPILER-MACRO", CL_ORDINARY, NULL),
SW("DEFINE-MODIFY-MACRO", CL_ORDINARY, NULL),
SW("DEFINE-SETF-EXPANDER", CL_ORDINARY, NULL),
SW("DEFINE-SYMBOL-MACRO", CL_ORDINARY, NULL),
SW("DEFMACRO", CL_ORDINARY, NULL),
SW("DEFPACKAGE", CL_ORDINARY, NULL),
SW("DEFPARAMETER", CL_ORDINARY, NULL),
SW("DEFSETF", CL_ORDINARY, NULL),
SW("DEFSTRUCT", CL_ORDINARY, NULL),
SW("DEFTYPE", CL_ORDINARY, NULL),
SW("DEFUN", CL_ORDINARY, NULL),
SW("DEFVAR", CL_ORDINARY, NULL),
SW("DELETE", CL_ORDINARY, NULL),
SW("DELETE-DUPLICATES", CL_ORDINARY, NULL),
SW("DELETE-IF", CL_ORDINARY, NULL),
SW("DELETE-IF-NOT", CL_ORDINARY, NULL),
SW("DEPOSIT-FIELD", CL_ORDINARY, NULL),
SW("DESCRIBE", CL_ORDINARY, NULL),
SW("DESTRUCTURING-BIND", CL_ORDINARY, NULL),
SW("DISASSEMBLE", CL_ORDINARY, NULL),
SW("DISPATCH-FUNCTION", CL_ORDINARY, &clSdispatch_function),
SW("DIVISION-BY-ZERO", CL_ORDINARY, &clSdivision_by_zero),
SW("DO", CL_ORDINARY, NULL),
SW("DO*", CL_ORDINARY, NULL),
SW("DO-ALL-SYMBOLS", CL_ORDINARY, NULL),
SW("DO-EXTERNAL-SYMBOLS", CL_ORDINARY, NULL),
SW("DO-SYMBOLS", CL_ORDINARY, NULL),
SW("DOCUMENTATION", CL_ORDINARY, NULL),
SW("DOLIST", CL_ORDINARY, NULL),
SW("DOUBLE-FLOAT", CL_ORDINARY, &clSdouble_float),
SW("DOUBLE-FLOAT-EPSILON", CL_CONSTANT, NULL),
SW("DOUBLE-FLOAT-NEGATIVE-EPSILON", CL_CONSTANT, NULL),
SW("DPB", CL_ORDINARY, NULL),
SW("DRIBBLE", CL_ORDINARY, NULL),
SW("ECASE", CL_ORDINARY, NULL),
SW("ECHO-STREAM", CL_ORDINARY, &clSecho_stream),
SW("ED", CL_ORDINARY, NULL),
SW("EIGHTH", CL_ORDINARY, NULL),
SW("ENCODE-UNIVERSAL-TIME", CL_ORDINARY, NULL),
SW("END-OF-FILE", CL_ORDINARY, &clSend_of_file),
SW("EQ", CL_ORDINARY, &clSeq),
SW("EQL", CL_ORDINARY, &clSeql),
SW("EQUAL", CL_ORDINARY, &clSequal),
SW("ERROR", CL_ORDINARY, &clSerror),
SW("ETYPECASE", CL_ORDINARY, NULL),
SW("EVAL", CL_ORDINARY, &clSeval),
SW("EVAL-WHEN", CL_ORDINARY, NULL),
SW("EVERY", CL_ORDINARY, NULL),
SW("EXTENDED-CHAR", CL_ORDINARY, &clSextended_char),
SW("FCEILING", CL_ORDINARY, NULL),
SW("FFLOOR", CL_ORDINARY, NULL),
SW("FIFTH", CL_ORDINARY, NULL),
SW("FILE-ERROR", CL_ORDINARY, &clSfile_error),
SW("FILE-STREAM", CL_ORDINARY, &clSfile_stream),
SW("FILL", CL_ORDINARY, NULL),
SW("FILL-POINTER", CL_ORDINARY, NULL),
SW("FIND", CL_ORDINARY, NULL),
SW("FIND-ALL-SYMBOLS", CL_ORDINARY, NULL),
SW("FIND-IF", CL_ORDINARY, NULL),
SW("FIND-IF-NOT", CL_ORDINARY, NULL),
SW("FIRST", CL_ORDINARY, NULL),
SW("FIXNUM", CL_ORDINARY, &clSfixnum),
SW("FLOAT", CL_ORDINARY, &clSfloat),
SW("FLOATING-POINT-INEXACT", CL_ORDINARY, &clSfloating_point_inexact),
SW("FLOATING-POINT-INVALID-OPERATION", CL_ORDINARY, &clSfloating_point_invalid_operation),
SW("FLOATING-POINT-OVERFLOW", CL_ORDINARY, &clSfloating_point_overflow),
SW("FLOATING-POINT-UNDERFLOW", CL_ORDINARY, &clSfloating_point_underflow),
SW("FORMAT", CL_ORDINARY, NULL),
SW("FOURTH", CL_ORDINARY, NULL),
SW("FROUND", CL_ORDINARY, NULL),
SW("FTRUNCATE", CL_ORDINARY, NULL),
SW("FTYPE", CL_ORDINARY, NULL),
SW("FUNCALL", CL_ORDINARY, &clSfuncall),
SW("FUNCTION", CL_ORDINARY, &clSfunction),
SW("GET-DECODED-TIME", CL_ORDINARY, NULL),
SW("GET-SETF-EXPANSION", CL_ORDINARY, NULL),
SW("GET-UNIVERSAL-TIME", CL_ORDINARY, NULL),
SW("GETF", CL_ORDINARY, NULL),
SW("HASH-TABLE", CL_ORDINARY, &clShash_table),
SW("IGNORE", CL_ORDINARY, NULL),
SW("IN-PACKAGE", CL_ORDINARY, NULL),
SW("INCF", CL_ORDINARY, NULL),
SW("INLINE", CL_ORDINARY, NULL),
SW("INSPECT", CL_ORDINARY, NULL),
SW("INSTANCE", CL_ORDINARY, &clSinstance),
SW("INTEGER", CL_ORDINARY, &clSinteger),
SW("INTEGER8", CL_ORDINARY, &clSinteger8),
SW("INTERNAL-TIME-UNITS-PER-SECOND", CL_CONSTANT, NULL),
SW("INTERSECTION", CL_ORDINARY, NULL),
SW("ISQRT", CL_ORDINARY, NULL),
SW("KEYWORD", CL_ORDINARY, &clSkeyword),
SW("LAMBDA", CL_ORDINARY, &clSlambda),
SW("LAMBDA-BLOCK", CL_ORDINARY, &clSlambda_block),
SW("LAMBDA-LIST-KEYWORDS", CL_CONSTANT, NULL),
SW("LAMBDA-PARAMETERS-LIMIT", CL_CONSTANT, NULL),
SW("LDB", CL_ORDINARY, NULL),
SW("LDB-TEST", CL_ORDINARY, NULL),
SW("LEAST-NEGATIVE-DOUBLE-FLOAT", CL_CONSTANT, NULL),
SW("LEAST-NEGATIVE-LONG-FLOAT", CL_CONSTANT, NULL),
SW("LEAST-NEGATIVE-SHORT-FLOAT", CL_CONSTANT, NULL),
SW("LEAST-NEGATIVE-SINGLE-FLOAT", CL_CONSTANT, NULL),
SW("LEAST-POSITIVE-DOUBLE-FLOAT", CL_CONSTANT, NULL),
SW("LEAST-POSITIVE-LONG-FLOAT", CL_CONSTANT, NULL),
SW("LEAST-POSITIVE-SHORT-FLOAT", CL_CONSTANT, NULL),
SW("LEAST-POSITIVE-SINGLE-FLOAT", CL_CONSTANT, NULL),
SW("LISP-IMPLEMENTATION-TYPE", CL_ORDINARY, NULL),
SW("LISP-IMPLEMENTATION-VERSION", CL_ORDINARY, NULL),
SW("LIST", CL_ORDINARY, &clSlist),
SW("LIST*", CL_ORDINARY, &clSlistX),
SW("LOAD", CL_ORDINARY, &clSload),
SW("LOAD-TIME-VALUE", CL_ORDINARY, NULL),
SW("LOCALLY", CL_ORDINARY, NULL),
SW("LOGANDC1", CL_ORDINARY, NULL),
SW("LOGANDC2", CL_ORDINARY, NULL),
SW("LOGICAL-PATHNAME", CL_ORDINARY, &clSlogical_pathname),
SW("LOGICAL-PATHNAME-TRANSLATIONS", CL_ORDINARY, NULL),
SW("LOGNAND", CL_ORDINARY, NULL),
SW("LOGNOR", CL_ORDINARY, NULL),
SW("LOGNOT", CL_ORDINARY, NULL),
SW("LOGORC1", CL_ORDINARY, NULL),
SW("LOGORC2", CL_ORDINARY, NULL),
SW("LOGTEST", CL_ORDINARY, NULL),
SW("LONG-SITE-NAME", CL_ORDINARY, NULL),
SW("LONG-FLOAT", CL_ORDINARY, &clSlong_float),
SW("LONG-FLOAT-EPSILON", CL_CONSTANT, NULL),
SW("LONG-FLOAT-NEGATIVE-EPSILON", CL_CONSTANT, NULL),
SW("LOOP", CL_ORDINARY, NULL),
SW("LOOP-FINISH", CL_ORDINARY, NULL),
SW("MACHINE-INSTANCE", CL_ORDINARY, NULL),
SW("MACHINE-TYPE", CL_ORDINARY, NULL),
SW("MACHINE-VERSION", CL_ORDINARY, NULL),
SW("MACRO", CL_ORDINARY, &clSmacro),
SW("MAKE-ARRAY", CL_ORDINARY, NULL),
SW("MAKE-SEQUENCE", CL_ORDINARY, NULL),
SW("MAP", CL_ORDINARY, NULL),
SW("MAP-INTO", CL_ORDINARY, NULL),
SW("MASK-FIELD", CL_ORDINARY, NULL),
SW("MERGE", CL_ORDINARY, NULL),
SW("MEMBER", CL_ORDINARY, &clSmember),
SW("MISMATCH", CL_ORDINARY, NULL),
SW("MOD", CL_ORDINARY, &clSmod),
SW("MOST-NEGATIVE-DOUBLE-FLOAT", CL_CONSTANT, NULL),
SW("MOST-NEGATIVE-FIXNUM", CL_CONSTANT, NULL),
SW("MOST-NEGATIVE-LONG-FLOAT", CL_CONSTANT, NULL),
SW("MOST-NEGATIVE-SHORT-FLOAT", CL_CONSTANT, NULL),
SW("MOST-NEGATIVE-SINGLE-FLOAT", CL_CONSTANT, NULL),
SW("MOST-POSITIVE-DOUBLE-FLOAT", CL_CONSTANT, NULL),
SW("MOST-POSITIVE-FIXNUM", CL_CONSTANT, NULL),
SW("MOST-POSITIVE-LONG-FLOAT", CL_CONSTANT, NULL),
SW("MOST-POSITIVE-SHORT-FLOAT", CL_CONSTANT, NULL),
SW("MOST-POSITIVE-SINGLE-FLOAT", CL_CONSTANT, NULL),
SW("MULTIPLE-VALUE-SETQ", CL_ORDINARY, NULL),
SW("NINTERSECTION", CL_ORDINARY, NULL),
SW("NINTH", CL_ORDINARY, NULL),
SW("NCONC", CL_ORDINARY, &clSnconc),
SW("NOT", CL_ORDINARY, &clSnot),
SW("NOTANY", CL_ORDINARY, NULL),
SW("NOTEVERY", CL_ORDINARY, NULL),
SW("NOTINLINE", CL_ORDINARY, NULL),
SW("NSET-DIFFERENCE", CL_ORDINARY, NULL),
SW("NSET-EXCLUSIVE-OR", CL_ORDINARY, NULL),
SW("NSUBSTITUTE", CL_ORDINARY, NULL),
SW("NSUBSTITUTE-IF", CL_ORDINARY, NULL),
SW("NSUBSTITUTE-IF-NOT", CL_ORDINARY, NULL),
SW("NULL", CL_ORDINARY, &clSnull),
SW("NUMBER", CL_ORDINARY, &clSnumber),
SW("NUNION", CL_ORDINARY, NULL),
SW("OPEN", CL_ORDINARY, NULL),
SW("OPTIMIZE", CL_ORDINARY, NULL),
SW("OR", CL_ORDINARY, &clSor),
SW("OTHERWISE", CL_ORDINARY, &clSotherwise),
SW("PACKAGE", CL_ORDINARY, &clSpackage),
SW("PACKAGE-ERROR", CL_ORDINARY, &clSpackage_error),
SW("PARSE-ERROR", CL_ORDINARY, &clSparse_error),
SW("PATHNAME", CL_ORDINARY, &clSpathname),
SW("PHASE", CL_ORDINARY, NULL),
SW("PI", CL_ORDINARY, NULL),
SW("PLUSP", CL_ORDINARY, &clSplusp),
SW("POP", CL_ORDINARY, NULL),
SW("POSITION", CL_ORDINARY, NULL),
SW("POSITION-IF", CL_ORDINARY, NULL),
SW("POSITION-IF-NOT", CL_ORDINARY, NULL),
SW("PRIN1-TO-STRING", CL_ORDINARY, NULL),
SW("PRINC-TO-STRING", CL_ORDINARY, NULL),
SW("PRINT-NOT-READABLE", CL_ORDINARY, &clSprint_not_readable),
SW("PROCLAIM", CL_ORDINARY, NULL),
SW("PROG1", CL_ORDINARY, NULL),
SW("PROG2", CL_ORDINARY, NULL),
SW("PROG*", CL_ORDINARY, NULL),
SW("PROGN", CL_ORDINARY, &clSprogn),
SW("PROGRAM-ERROR", CL_ORDINARY, &clSprogram_error),
SW("PROVIDE", CL_ORDINARY, NULL),
SW("PSETF", CL_ORDINARY, &clSpsetf),
SW("PUSH", CL_ORDINARY, NULL),
SW("PUSHNEW", CL_ORDINARY, NULL),
SW("QUOTE", CL_ORDINARY, &clSquote),
SW("RANDOM-STATE", CL_ORDINARY, &clSrandom_state),
SW("RATIO", CL_ORDINARY, &clSratio),
SW("RATIONAL", CL_ORDINARY, &clSrational),
SW("RATIONALIZE", CL_ORDINARY, NULL),
SW("READ-FROM-STRING", CL_ORDINARY, NULL),
SW("READER-ERROR", CL_ORDINARY, &clSreader_error),
SW("READTABLE", CL_ORDINARY, &clSreadtable),
SW("REAL", CL_ORDINARY, &clSreal),
SW("REDUCE", CL_ORDINARY, NULL),
SW("REM", CL_ORDINARY, NULL),
SW("REMF", CL_ORDINARY, NULL),
SW("REMOVE", CL_ORDINARY, NULL),
SW("REMOVE-DUPLICATES", CL_ORDINARY, NULL),
SW("REMOVE-IF", CL_ORDINARY, NULL),
SW("REMOVE-IF-NOT", CL_ORDINARY, NULL),
SW("REPLACE", CL_ORDINARY, NULL),
SW("REQUIRE", CL_ORDINARY, NULL),
SW("ROTATEF", CL_ORDINARY, NULL),
SW("ROW-MAJOR-AREF", CL_ORDINARY, NULL),
SW("ROOM", CL_ORDINARY, NULL),
SW("SAFETY", CL_ORDINARY, NULL),
SW("SATISFIES", CL_ORDINARY, &clSsatisfies),
SW("SBIT", CL_ORDINARY, NULL),
SW("SEARCH", CL_ORDINARY, NULL),
SW("SECOND", CL_ORDINARY, NULL),
SW("SEQUENCE", CL_ORDINARY, &clSsequence),
SW("SERIOUS-CONDITION", CL_ORDINARY, &clSserious_condition),
SW("SET-DIFFERENCE", CL_ORDINARY, NULL),
SW("SET-EXCLUSIVE-OR", CL_ORDINARY, NULL),
SW("SETF", CL_ORDINARY, &clSsetf),
SW("SEVENTH", CL_ORDINARY, NULL),
SW("SHIFTF", CL_ORDINARY, NULL),
SW("SHORT-FLOAT", CL_ORDINARY, &clSshort_float),
SW("SHORT-FLOAT-EPSILON", CL_CONSTANT, NULL),
SW("SHORT-FLOAT-NEGATIVE-EPSILON", CL_CONSTANT, NULL),
SW("SHORT-SITE-NAME", CL_ORDINARY, NULL),
SW("SINGLE-FLOAT", CL_ORDINARY, NULL),
SW("SINGLE-FLOAT-EPSILON", CL_CONSTANT, NULL),
SW("SINGLE-FLOAT-NEGATIVE-EPSILON", CL_CONSTANT, NULL),
SW("SIGNED-BYTE", CL_ORDINARY, &clSsigned_byte),
SW("SIGNED-CHAR", CL_ORDINARY, &clSsigned_char),
SW("SIGNED-SHORT", CL_ORDINARY, &clSsigned_short),
SW("SIGNUM", CL_ORDINARY, NULL),
SW("SIMPLE-ARRAY", CL_ORDINARY, &clSsimple_array),
SW("SIMPLE-BASE-STRING", CL_ORDINARY, NULL),
SW("SIMPLE-BIT-VECTOR", CL_ORDINARY, &clSsimple_bit_vector),
SW("SIMPLE-CONDITION", CL_ORDINARY, &clSsimple_condition),
SW("SIMPLE-ERROR", CL_ORDINARY, &clSsimple_error),
SW("SIMPLE-STRING", CL_ORDINARY, &clSsimple_string),
SW("SIMPLE-TYPE-ERROR", CL_ORDINARY, &clSsimple_type_error),
SW("SIMPLE-VECTOR", CL_ORDINARY, &clSsimple_vector),
SW("SIMPLE-WARNING", CL_ORDINARY, &clSsimple_warning),
SW("SIN", CL_ORDINARY, NULL),
SW("SINGLE-FLOAT", CL_ORDINARY, &clSsingle_float),
SW("SINH", CL_ORDINARY, NULL),
SW("SIXTH", CL_ORDINARY, NULL),
SW("SOFTWARE-TYPE", CL_ORDINARY, NULL),
SW("SOFTWARE-VERSION", CL_ORDINARY, NULL),
SW("SOME", CL_ORDINARY, NULL),
SW("SORT", CL_ORDINARY, NULL),
SW("SPACE", CL_ORDINARY, NULL),
SW("SPECIAL", CL_ORDINARY, &clSspecial),
SW("SPECIAL-FORM-P", CL_ORDINARY, NULL),
SW("SPECIAL-OPERATOR-P", CL_ORDINARY, NULL),
SW("SPEED", CL_ORDINARY, NULL),
SW("STABLE-SORT", CL_ORDINARY, NULL),
SW("STANDARD-CHAR", CL_ORDINARY, &clSstandard_char),
SW("STEP", CL_ORDINARY, NULL),
SW("STORAGE-CONDITION", CL_ORDINARY, &clSstorage_condition),
SW("STREAM", CL_ORDINARY, &clSstream),
SW("STREAM-ERROR", CL_ORDINARY, &clSstream_error),
SW("STRING", CL_ORDINARY, &clSstring),
SW("STRING-STREAM", CL_ORDINARY, &clSstring_stream),
SW("STRUCTURE", CL_ORDINARY, &clSstructure),
SW("STYLE-WARNING", CL_ORDINARY, &clSstyle_warning),
SW("SUBSETP", CL_ORDINARY, NULL),
SW("SUBSTITUTE", CL_ORDINARY, NULL),
SW("SUBSTITUTE-IF", CL_ORDINARY, NULL),
SW("SUBSTITUTE-IF-NOT", CL_ORDINARY, NULL),
SW("SUBTYPEP", CL_ORDINARY, &clSsubtypep),
SW("SYMBOL", CL_ORDINARY, &clSsymbol),
SW("SYMBOL-MACROLET", CL_ORDINARY, NULL),
SW("SYNONYM-STREAM", CL_ORDINARY, &clSsynonym_stream),
SW("TAG", CL_ORDINARY, &clStag),
SW("TAN", CL_ORDINARY, NULL),
SW("TANH", CL_ORDINARY, NULL),
SW("TENTH", CL_ORDINARY, NULL),
SW("THIRD", CL_ORDINARY, NULL),
SW("TIME", CL_ORDINARY, NULL),
SW("TRACE", CL_ORDINARY, NULL),
SW("TWO-WAY-STREAM", CL_ORDINARY, &clStwo_way_stream),
SW("TYPE", CL_ORDINARY, NULL),
SW("TYPE-ERROR", CL_ORDINARY, &clStype_error),
SW("TYPECASE", CL_ORDINARY, NULL),
SW("TYPEP", CL_ORDINARY, &clStypep),
SW("UNBOUND-SLOT", CL_ORDINARY, &clSunbound_slot),
SW("UNBOUND-VARIABLE", CL_ORDINARY, &clSunbound_variable),
SW("UNDEFINED-FUNCTION", CL_ORDINARY, &clSundefined_function),
SW("UNION", CL_ORDINARY, NULL),
SW("UNSIGNED-BYTE", CL_ORDINARY, &clSunsigned_byte),
SW("UNSIGNED-CHAR", CL_ORDINARY, &clSunsigned_char),
SW("UNSIGNED-SHORT", CL_ORDINARY, &clSunsigned_short),
SW("UNTRACE", CL_ORDINARY, NULL),
SW("VALUES", CL_ORDINARY, &clSvalues),
SW("VARIABLE", CL_ORDINARY, NULL),
SW("VECTOR", CL_ORDINARY, &clSvector),
SW("VECTOR-POP", CL_ORDINARY, NULL),
SW("VECTOR-PUSH", CL_ORDINARY, NULL),
SW("VECTOR-PUSH-EXTEND", CL_ORDINARY, NULL),
SW("WARN", CL_ORDINARY, &clSwarn),
SW("WARNING", CL_ORDINARY, &clSwarning),
SW("WITH-INPUT-FROM-STRING", CL_ORDINARY, NULL),
SW("WITH-OPEN-FILE", CL_ORDINARY, NULL),
SW("WITH-OPEN-STREAM", CL_ORDINARY, NULL),
SW("WITH-OUTPUT-TO-STRING", CL_ORDINARY, NULL),
SW("WITH-STANDARD-IO-SYNTAX", CL_ORDINARY, NULL),
SW("WRITE-TO-STRING", CL_ORDINARY, NULL),
SW("Y-OR-N-P", CL_ORDINARY, NULL),
SW("YES-OR-NO-P", CL_ORDINARY, NULL),

#ifdef CLOS
SW("ADD-METHOD", CL_ORDINARY, NULL),
SW("BUILT-IN-CLASS", CL_ORDINARY, &clSbuilt_in_class),
SW("CALL-NEXT-METHOD", CL_ORDINARY, NULL),
SW("CHANGE-CLASS", CL_ORDINARY, NULL),
SW("CLASS", CL_ORDINARY, &clSclass),
SW("CLASS-CHANGED", CL_ORDINARY, NULL),
SW("CLASS-NAME", CL_ORDINARY, NULL),
SW("CLASS-OF", CL_ORDINARY, NULL),
SW("DEFCLASS", CL_ORDINARY, NULL),
SW("DEFGENERIC", CL_ORDINARY, NULL),
SW("DEFINE-METHOD-COMBINATION", CL_ORDINARY, NULL),
SW("DEFMETHOD", CL_ORDINARY, NULL),
SW("DESCRIBE-OBJECT", CL_ORDINARY, NULL),
SW("ENSURE-GENERIC-FUNCTION", CL_ORDINARY, NULL),
SW("FIND-METHOD", CL_ORDINARY, NULL),
SW("GENERIC-FLET", CL_ORDINARY, NULL),
SW("GENERIC-FUNCTION", CL_ORDINARY, NULL),
SW("GENERIC-LABELS", CL_ORDINARY, NULL),
SW("GET-METHOD", CL_ORDINARY, NULL),
SW("INITIALIZE-INSTANCE", CL_ORDINARY, NULL),
SW("INVALID-METHOD-ERROR", CL_ORDINARY, NULL),
SW("MAKE-INSTANCE", CL_ORDINARY, NULL),
SW("MAKE-INSTANCES-OBSOLETE", CL_ORDINARY, NULL),
SW("MAKE-METHOD-CALL", CL_ORDINARY, NULL),
SW("METHOD", CL_ORDINARY, NULL),
SW("METHOD-COMBINATION-ERROR", CL_ORDINARY, NULL),
SW("METHOD-QUALIFIERS", CL_ORDINARY, NULL),
SW("NEXT-METHOD-P", CL_ORDINARY, NULL),
SW("NO-APPLICABLE-METHOD", CL_ORDINARY, NULL),
SW("PRINT-OBJECT", CL_ORDINARY, &clSprint_object),
SW("PRINT-UNREADABLE-OBJECT", CL_ORDINARY, NULL),
SW("REINITIALIZE-INSTANCE", CL_ORDINARY, NULL),
SW("REMOVE-METHOD", CL_ORDINARY, NULL),
SW("SHARED-INITIALIZE", CL_ORDINARY, NULL),
SW("SLOT-BOUNDP", CL_ORDINARY, NULL),
SW("SLOT-EXISTS-P", CL_ORDINARY, NULL),
SW("SLOT-MAKUNBOUND", CL_ORDINARY, NULL),
SW("SLOT-MISSING", CL_ORDINARY, NULL),
SW("SLOT-UNBOUND", CL_ORDINARY, NULL),
SW("SLOT-VALUE", CL_ORDINARY, NULL),
SW("STANDARD-CLASS", CL_ORDINARY, NULL),
SW("STANDARD-GENERIC-FUNCTION", CL_ORDINARY, NULL),
SW("STANDARD-METHOD", CL_ORDINARY, NULL),
SW("STANDARD-OBJECT", CL_ORDINARY, NULL),
SW("STRUCTURE-CLASS", CL_ORDINARY, NULL),
SW("STRUCTURE-OBJECT", CL_ORDINARY, &clSstructure_object),
SW("SUBCLASSP", CL_ORDINARY, NULL),
SW("UPDATE-INSTANCE-FOR-REDEFINED-CLASS", CL_ORDINARY, NULL),
SW("UPDATE-INSTANCE-STRUCTURE", CL_ORDINARY, NULL),
SW("WITH-ACCESSORS", CL_ORDINARY, NULL),
SW("WITH-ADDED-METHODS", CL_ORDINARY, NULL),
SW("WITH-SLOTS", CL_ORDINARY, NULL),
#endif

/* SYSTEM PACKAGE */
SW("SI::#!", SI_ORDINARY, &siSsharp_exclamation),
SW("SI::*CLASS-NAME-HASH-TABLE*", SI_SPECIAL, &siVclass_name_hash_table),
SW("SI::*GC-MESSAGE*", SI_SPECIAL, &siVgc_message),
SW("SI::*GC-VERBOSE*", SI_SPECIAL, &siVgc_verbose),
SW("SI::*IGNORE-EOF-ON-TERMINAL-IO*", SI_SPECIAL, &siVignore_eof_on_terminal_io),
SW("SI::*INDENT-FORMATTED-OUTPUT*", SI_SPECIAL, &siVindent_formatted_output),
SW("SI::*INHIBIT-MACRO-SPECIAL*", SI_SPECIAL, &siVinhibit_macro_special),
SW("SI::*INIT-FUNCTION-PREFIX*", SI_SPECIAL, &siVinit_function_prefix),
SW("SI::*KEEP-DEFINITIONS*", SI_SPECIAL, &siVkeep_definitions),
SW("SI::*LOAD-HOOKS*", SI_SPECIAL, &siVload_hooks),
SW("SI::*PRINT-PACKAGE*", SI_SPECIAL, &siVprint_package),
SW("SI::*PRINT-STRUCTURE*", SI_SPECIAL, &siVprint_structure),
SW("SI::,", SI_ORDINARY, &siScomma),
SW("SI::,.", SI_ORDINARY, &siScomma_dot),
SW("SI::,@", SI_ORDINARY, &siScomma_at),
SW("SI::CLEAR-COMPILER-PROPERTIES", SI_ORDINARY, &siSclear_compiler_properties),
SW("SI::COMPUTE-APPLICABLE-METHODS", SI_ORDINARY, &siScompute_applicable_methods),
SW("SI::COMPUTE-EFFECTIVE-METHOD", SI_ORDINARY, &siScompute_effective_method),
SW("SI::EXPAND-DEFMACRO", SI_ORDINARY, &siSexpand_defmacro),
SW("SI::GENERIC-FUNCTION-METHOD-COMBINATION", SI_ORDINARY, &siSgeneric_function_method_combination),
SW("SI::GENERIC-FUNCTION-METHOD-COMBINATION-ARGS", SI_ORDINARY, &siSgeneric_function_method_combination_args),
SW("SI::LINK-FROM", SI_ORDINARY, NULL),
SW("SI::LINK-TO", SI_ORDINARY, NULL),
SW("SI::PRETTY-PRINT-FORMAT", SI_ORDINARY, &siSpretty_print_format),
SW("SI::SETF-LAMBDA", SI_ORDINARY, &siSsetf_lambda),
SW("SI::SETF-METHOD", SI_ORDINARY, &siSsetf_method),
SW("SI::SETF-SYMBOL", SI_ORDINARY, &siSsetf_symbol),
SW("SI::SETF-UPDATE", SI_ORDINARY, &siSsetf_update),
SW("SI::SIMPLE-CONTROL-ERROR", SI_ORDINARY, &siSsimple_control_error),
SW("SI::SIMPLE-PROGRAM-ERROR", SI_ORDINARY, &siSsimple_program_error),
#ifndef CLOS
SW("SI::STRUCTURE-INCLUDE", SI_ORDINARY, &siSstructure_include),
#endif
SW("SI::STRUCTURE-PRINT-FUNCTION", SI_ORDINARY, &siSstructure_print_function),
SW("SI::STRUCTURE-SLOT-DESCRIPTIONS", SI_ORDINARY, &siSstructure_slot_descriptions),
SW("SI::SYMBOL-MACRO", SI_ORDINARY, &siSsymbol_macro),
SW("SI::TERMINAL-INTERRUPT", SI_ORDINARY, &siSterminal_interrupt),
SW("SI::UNIVERSAL-ERROR-HANDLER", SI_ORDINARY, &siSuniversal_error_handler),

#ifdef PROFILE
SW("SI::*PROFILE-ARRAY*", SI_SPECIAL, &sSAprofile_arrayA),
#endif

#ifdef ECL_CLOS_STREAMS
SW("STREAM-CLEAR-INPUT", CL_ORDINARY, &clSstream_clear_input),
SW("STREAM-CLEAR-OUTPUT", CL_ORDINARY, &clSstream_clear_output),
SW("STREAM-CLOSE", CL_ORDINARY, &clSstream_close),
SW("STREAM-FORCE-OUTPUT", CL_ORDINARY, &clSstream_force_output),
SW("STREAM-INPUT-P", CL_ORDINARY, &clSstream_input_p),
SW("STREAM-LISTEN", CL_ORDINARY, &clSstream_listen),
SW("STREAM-OUTPUT-P", CL_ORDINARY, &clSstream_output_p),
SW("STREAM-READ-CHAR", CL_ORDINARY, &clSstream_read_char),
SW("STREAM-UNREAD-CHAR", CL_ORDINARY, &clSstream_unread_char),
SW("STREAM-WRITE-CHAR", CL_ORDINARY, &clSstream_write_char),
#endif

#ifdef PDE
SW("SI::*RECORD-SOURCE-PATHNAME-P*", SI_SPECIAL, &siVrecord_source_pathname_p),
SW("SI::*SOURCE-PATHNAME*", SI_SPECIAL, &siVsource_pathname),
SW("SI::RECORD-SOURCE-PATHNAME", SI_ORDINARY, &siSrecord_source_pathname),
#endif

#ifdef THREADS
SW("CONT", CL_ORDINARY, &clScont),
SW("DEAD", CL_ORDINARY, &clSdead),
SW("RUNNING", CL_ORDINARY, &clSrunning),
SW("STOPPED", CL_ORDINARY, &clSstopped),
SW("SUSPENDED", CL_ORDINARY, &clSsuspended),
SW("THREAD", CL_ORDINARY, &clSthread),
SW("SI::THREAD-TOP-LEVEL", SI_ORDINARY, &siSthread_top_level),
SW("WAITING", CL_ORDINARY, &clSwaiting),
#endif

/* KEYWORD PACKAGE */
SW(":ABORT", KEYWORD, &Kabort),
SW(":ABSOLUTE", KEYWORD, &Kabsolute),
SW(":ALLOW-OTHER-KEYS", KEYWORD, &Kallow_other_keys),
SW(":APPEND", KEYWORD, &Kappend),
SW(":ARRAY", KEYWORD, &Karray),
SW(":BASE", KEYWORD, &Kbase),
SW(":BLOCK", KEYWORD, &Kblock),
SW(":CAPITALIZE", KEYWORD, &Kcapitalize),
SW(":CASE", KEYWORD, &Kcase),
SW(":CATCH", KEYWORD, &Kcatch),
SW(":CATCHALL", KEYWORD, &Kcatchall),
SW(":CIRCLE", KEYWORD, &Kcircle),
SW(":COMPILE-TOPLEVEL", KEYWORD, &Kcompile_toplevel),
SW(":CREATE", KEYWORD, &Kcreate),
SW(":DATUM", KEYWORD, &Kdatum),
SW(":DEFAULT", KEYWORD, &Kdefault),
SW(":DEFAULTS", KEYWORD, &Kdefaults),
SW(":DEVICE", KEYWORD, &Kdevice),
SW(":DIRECTION", KEYWORD, &Kdirection),
SW(":DIRECTORY", KEYWORD, &Kdirectory),
SW(":DOWNCASE", KEYWORD, &Kdowncase),
SW(":ELEMENT-TYPE", KEYWORD, &Kelement_type),
SW(":END", KEYWORD, &Kend),
SW(":END1", KEYWORD, &Kend1),
SW(":END2", KEYWORD, &Kend2),
SW(":ERROR", KEYWORD, &Kerror),
SW(":ESCAPE", KEYWORD, &Kescape),
SW(":EXECUTE", KEYWORD, &Kexecute),
SW(":EXPECTED-TYPE", KEYWORD, &Kexpected_type),
SW(":EXTERNAL", KEYWORD, &Kexternal),
SW(":FORMAT-ARGUMENTS", KEYWORD, &Kformat_arguments),
SW(":FORMAT-CONTROL", KEYWORD, &Kformat_control),
SW(":FUNCTION", KEYWORD, &Kfunction),
SW(":GENSYM", KEYWORD, &Kgensym),
SW(":HOST", KEYWORD, &Khost),
SW(":IF-DOES-NOT-EXIST", KEYWORD, &Kif_does_not_exist),
SW(":IF-EXISTS", KEYWORD, &Kif_exists),
SW(":INHERITED", KEYWORD, &Kinherited),
SW(":INITIAL-ELEMENT", KEYWORD, &Kinitial_element),
SW(":INPUT", KEYWORD, &Kinput),
SW(":INTERNAL", KEYWORD, &Kinternal),
SW(":IO", KEYWORD, &Kio),
SW(":JUNK-ALLOWED", KEYWORD, &Kjunk_allowed),
SW(":KEY", KEYWORD, &Kkey),
SW(":LENGTH", KEYWORD, &Klength),
SW(":LEVEL", KEYWORD, &Klevel),
SW(":LIST-ALL", KEYWORD, &Klist_all),
SW(":LOAD-TOPLEVEL", KEYWORD, &Kload_toplevel),
SW(":NAME", KEYWORD, &Kname),
SW(":NEW-VERSION", KEYWORD, &Knew_version),
SW(":NEWEST", KEYWORD, &Knewest),
SW(":NICKNAMES", KEYWORD, &Knicknames),
SW(":OUTPUT", KEYWORD, &Koutput),
SW(":OVERWRITE", KEYWORD, &Koverwrite),
SW(":PATHNAME", KEYWORD, &Kpathname),
SW(":PRETTY", KEYWORD, &Kpretty),
SW(":PRINT", KEYWORD, &Kprint),
SW(":PROBE", KEYWORD, &Kprobe),
SW(":PROTECT", KEYWORD, &Kprotect),
SW(":RADIX", KEYWORD, &Kradix),
SW(":REHASH-SIZE", KEYWORD, &Krehash_size),
SW(":REHASH-THRESHOLD", KEYWORD, &Krehash_threshold),
SW(":RELATIVE", KEYWORD, &Krelative),
SW(":RENAME", KEYWORD, &Krename),
SW(":RENAME-AND-DELETE", KEYWORD, &Krename_and_delete),
SW(":SET-DEFAULT-PATHNAME", KEYWORD, &Kset_default_pathname),
SW(":SIZE", KEYWORD, &Ksize),
SW(":START", KEYWORD, &Kstart),
SW(":START1", KEYWORD, &Kstart1),
SW(":START2", KEYWORD, &Kstart2),
SW(":STREAM", KEYWORD, &Kstream),
SW(":SUPERSEDE", KEYWORD, &Ksupersede),
SW(":TAG", KEYWORD, &Ktag),
SW(":TEST", KEYWORD, &Ktest),
SW(":TEST-NOT", KEYWORD, &Ktest_not),
SW(":TYPE", KEYWORD, &Ktype),
SW(":UNSPECIFIC", KEYWORD, &Kunspecific),
SW(":UP", KEYWORD, &Kup),
SW(":UPCASE", KEYWORD, &Kupcase),
SW(":USE", KEYWORD, &Kuse),
SW(":VERBOSE", KEYWORD, &Kverbose),
SW(":VERSION", KEYWORD, &Kversion),
SW(":WILD", KEYWORD, &Kwild),
SW(":WILD-INFERIORS", KEYWORD, &Kwild_inferiors),

/* Tag for end of list */
SW((const char*)NULL, CL_ORDINARY, NULL)};

