;; -*- lisp -*-
(defun safe-mapcar (f list)
  (mapcar #'(lambda (x) (with-ignored-errors (funcall f x))) list))
safe-mapcar
(defun safe-mapcar2 (f list list2)
  (mapcar #'(lambda (x y) (with-ignored-errors (funcall f x y))) list list2))
safe-mapcar2

(defun ~= (x y &optional (tol 1e-14))
  (< (abs (- x y)) (if (< (abs x) tol) tol (* tol (abs x)))))
~=

(defun number-test (f x-list y-list &optional (tol 1e-14))
  (do ((out nil)
       (x-list x-list (cdr x-list))
       (y-list y-list (cdr y-list)))
      ((null x-list) out)
    (let* ((x (car x-list))
	   (y (car y-list))
	   (z (with-ignored-errors (funcall f x))))
      (cond ((eq z 'error)
	     (push z out))
	    ((not (~= z y tol))
	     (push (list x z y) out))))))
number-test

(setq *read-default-float-format* 'double-float)
double-float

(defun span (min max n)
  (do* ((m (1- n))
	(delta (- max min))
	(i m (1- i))
	(out nil))
       ((minusp i) out)
    (push (+ min (/ (* delta i) m)) out)))
span

;;
;; PHASES
;;
(defparameter z
	'(#C(1.0 0.0)			#C(0.8660254037844386 0.5)
	  #C(0.5 0.8660254037844386)	#C(0.0 1.0)
	  #C(-0.5 0.8660254037844386)	#C(-0.8660254037844386 0.5)
	  #C(-1.0 0.0)			#C(-0.8660254037844386 -0.5)
	  #C(-0.5 -0.8660254037844386)	#C(0.0 -1.0)
	  #C(0.5 -0.8660254037844386)	#C(0.8660254037844386 -0.5)
	  #C(2.0 0.0)			#C(1.732050807568877 1.0)
	  #C(1.0 1.732050807568877)	#C(0.0 2.0)
	  #C(-1.0 1.732050807568877)	#C(-1.732050807568877 1.0)
	  #C(-2.0 0.0)			#C(-1.732050807568877 -1.0)
	  #C(-1.0 -1.732050807568877)	#C(0.0 -2.0)
	  #C(1.0 -1.732050807568877)	#C(1.732050807568877 -1.0)
	  #C(0.5 0.0)			#C(0.4330127018922193 0.25)
	  #C(0.25 0.4330127018922193)	#C(0.0 0.5)
	  #C(-0.25 0.4330127018922193)	#C(-0.4330127018922193 0.25)
	  #C(-0.5 0.0)			#C(-0.4330127018922193 -0.25)
	  #C(-0.25 -0.4330127018922193)	#C(0.0 -0.5)
	  #C(0.25 -0.4330127018922193)	#C(0.4330127018922193 -0.25)))
z

(defparameter r-long
  (let* ((x (span 0 (* 2 pi) 17))
	 (y (nreverse (mapcar #'- (cdr x)))))
    (print (nconc y x))))
r-long

(defparameter r1-long (span -1d0 1d0 33))
r1-long

;;
;; ABS
;;
(safe-mapcar #'abs
	     '(0 1 -1 12 -12 123 -123 1234 -1234 12345 -12345
	       123456 -123456 1234567 -1234567 12345678 -12345678
	       123456789 -123456789 1234567890 -1234567890
	       12345678901 -12345678901 -123456789012 -123456789012
	       1234567890123 -1234567890123 12345678901234 -12345678901234
	       ; Rational
	       1/2 -1/2 12/23 -12/23 123/234 -123/234 1234/2345 -1234/2345
	       123456/234567 -123456/234567 12345678/23456789 -12345678/23456789
	       ; Short-float
	       0.1s0 -0.1s0 1.2s0 -1.2s0 12.34s0 -12.34s0
	       ; Long-float
	       0.1l0 -0.1l0 1.2l0 -1.2l0 12.34l0 -12.34l0
	       ))
(0 1 1 12 12 123 123 1234 1234 12345 12345
 123456 123456 1234567 1234567 12345678 12345678
 123456789 123456789 1234567890 1234567890
 12345678901 12345678901 123456789012 123456789012
 1234567890123 1234567890123 12345678901234 12345678901234
 1/2 1/2 12/23 12/23 123/234 123/234 1234/2345 1234/2345
 123456/234567 123456/234567 12345678/23456789 12345678/23456789
 0.1s0 0.1s0 1.2s0 1.2s0 12.34s0 12.34s0
 0.1l0 0.1l0 1.2l0 1.2l0 12.34l0 12.34l0)

(number-test #'abs z
	     '(1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0
	       2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0
	       0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5))
nil
	     
;;
;; EXP/LOG/SIN/COS/TAN/ASIN/ACOS/SINH/COSH/TANH
;;
;; LONG FLOAT VALUES
(number-test #'exp r-long
	     '(0.001867442731707989 0.00276563164936455
	       0.004095824889350833 0.006065804724240946 0.008983291021129429
	       0.01330400849335009 0.01970287298661711 0.02917941642331385
	       0.04321391826377226 0.06399863193343149 0.09478022484215486
	       0.1403669226941202 0.2078795763507619 0.307863971328499
	       0.4559381277659962 0.6752319066557773 1 1.48097267048991
	       2.193280050738015 3.248187813873724 4.810477380965351
	       7.124185533219564 10.55072407419776 15.62533400776684
	       23.14069263277927 34.27073336535329 50.75401951173493
	       75.16531581439104 111.3177784898562 164.8585876831267
	       244.1510628542752 361.581051558246 535.4916555247646))
nil

(number-test #'(lambda (x) (log (exp x))) r-long r-long)
nil

(number-test #'sin r-long
	     '(2.449212707644755e-16 0.3826834323650887 0.707106781186547
	       0.9238795325112866 1 0.9238795325112865 0.7071067811865475
	       0.3826834323650897 -1.224606353822377e-16 -0.3826834323650899
	       -0.7071067811865476 -0.9238795325112867 -1 -0.9238795325112867
	       -0.7071067811865475 -0.3826834323650898 0 0.3826834323650898
	       0.7071067811865475 0.9238795325112867 1 0.9238795325112867
	       0.7071067811865476 0.3826834323650899 1.224606353822377e-16
	       -0.3826834323650897 -0.7071067811865475 -0.9238795325112865 -1
	       -0.9238795325112866 -0.707106781186547 -0.3826834323650887
	       -2.449212707644755e-16))
nil

(number-test #'cos r-long
	     '(1 0.9238795325112872 0.707106781186548 0.38268343236509
	       -1.836909530733566e-16 -0.3826834323650903 -0.7071067811865477
	       -0.9238795325112868 -1 -0.9238795325112867 -0.7071067811865475
	       -0.3826834323650897 6.123031769111886e-17 0.3826834323650898
	       0.7071067811865476 0.9238795325112867 1 0.9238795325112867
	       0.7071067811865476 0.3826834323650898 6.123031769111886e-17
	       -0.3826834323650897 -0.7071067811865475 -0.9238795325112867 -1
	       -0.9238795325112868 -0.7071067811865477 -0.3826834323650903
	       -1.836909530733566e-16 0.38268343236509 0.707106781186548
	       0.9238795325112872 1))
nil

(number-test #'tan r-long
	     '(2.449212707644755e-16 0.4142135623730938
	       0.9999999999999987 2.414213562373094 -5443926242794615
	       -2.414213562373091 -0.9999999999999997 -0.4142135623730949
	       1.224606353822377e-16 0.4142135623730952 1 2.414213562373095
	       -1.633177872838384e+16 -2.414213562373095 -0.9999999999999999
	       -0.414213562373095 0 0.414213562373095 0.9999999999999999
	       2.414213562373095 1.633177872838384e+16 -2.414213562373095 -1
	       -0.4142135623730952 -1.224606353822377e-16 0.4142135623730949
	       0.9999999999999997 2.414213562373091 5443926242794615
	       -2.414213562373094 -0.9999999999999987 -0.4142135623730938
	       -2.449212707644755e-16))
nil

(number-test #'sinh r-long
	     '(-267.7448940410164 -180.7891429632983
	       -122.0734835146929 -82.42626093920121 -55.65439759941754
	       -37.57600590294884 -25.36715831937416 -17.12077697446499
	       -11.54873935725775 -7.780667687916705 -5.227971924677803
	       -3.491909305262722 -2.301298902307295 -1.470161921272612
	       -0.8686709614860095 -0.4028703819170664 0 0.4028703819170664
	       0.8686709614860095 1.470161921272612 2.301298902307295
	       3.491909305262722 5.227971924677803 7.780667687916705
	       11.54873935725775 17.12077697446499 25.36715831937416
	       37.57600590294884 55.65439759941754 82.42626093920121
	       122.0734835146929 180.7891429632983 267.7448940410164))
nil

(number-test #'cosh r-long
	     '(267.7467614837482 180.7919085949477 122.0775793395823
	       82.43232674392546 55.66338089043867 37.58930991144219
	       25.38686119236077 17.1499563908883 11.59195327552152 7.844666319850137
	       5.322752149519958 3.632276227956842 2.509178478658057
	       1.778025892601111 1.324609089252006 1.078102288572844 1
	       1.078102288572844 1.324609089252006 1.778025892601111
	       2.509178478658057 3.632276227956842 5.322752149519958
	       7.844666319850137 11.59195327552152 17.1499563908883 25.38686119236077
	       37.58930991144219 55.66338089043867 82.43232674392546
	       122.0775793395823 180.7919085949477 267.7467614837482))
nil

(number-test #'tanh r-long
	     '(-0.9999930253396107 -0.9999847026801649
	       -0.9999664489997958 -0.9999264147335901 -0.9998386139886326
	       -0.9996460693605524 -0.9992238948786412 -0.9982985719754474
	       -0.99627207622075 -0.9918417649235776 -0.9821933800072388
	       -0.9613556585774654 -0.9171523356672744 -0.8268506816410203
	       -0.6557942026326724 -0.3736847479012153 0 0.3736847479012153
	       0.6557942026326724 0.8268506816410203 0.9171523356672744
	       0.9613556585774654 0.9821933800072388 0.9918417649235776
	       0.99627207622075 0.9982985719754474 0.9992238948786412
	       0.9996460693605524 0.9998386139886326 0.9999264147335901
	       0.9999664489997958 0.9999847026801649 0.9999930253396107))
nil

(defun normalize-angle (x)
  (cond ((> x pi) (normalize-angle (- x (* 2 pi))))
	((< x (- pi)) (normalize-angle (+ x (* 2 pi))))
	(t x)))
normalize-angle

(number-test #'(lambda (x) (asin (sin x))) r-long
	     '(0 0.392699081698723 0.7853981633974476
	       1.178097245096172 1.570796326794897 1.178097245096172
	       0.7853981633974482 0.392699081698724 0
	       -0.3926990816987243 -0.7853981633974484 -1.178097245096172
	       -1.570796326794897 -1.178097245096172 -0.7853981633974482
	       -0.3926990816987241 0 0.3926990816987241 0.7853981633974482
	       1.178097245096172 1.570796326794897 1.178097245096172
	       0.7853981633974484 0.3926990816987243 0
	       -0.392699081698724 -0.7853981633974482 -1.178097245096172
	       -1.570796326794897 -1.178097245096172 -0.7853981633974476
	       -0.392699081698723 0))
nil

(number-test #'(lambda (x) (acos (cos x))) r-long
	     '(0 0.392699081698723 0.7853981633974476
	       1.178097245096172 1.570796326794897 1.963495408493621
	       2.356194490192345 2.748893571891069 3.141592653589793
	       2.748893571891069 2.356194490192345 1.963495408493621
	       1.570796326794897 1.178097245096172 0.7853981633974483
	       0.3926990816987242 0 0.3926990816987242 0.7853981633974483
	       1.178097245096172 1.570796326794897 1.963495408493621
	       2.356194490192345 2.748893571891069 3.141592653589793
	       2.748893571891069 2.356194490192345 1.963495408493621
	       1.570796326794897 1.178097245096172 0.7853981633974476
	       0.392699081698723 0))
nil

(number-test #'(lambda (x) (atan (tan x))) r-long
	     '(0 0.392699081698723 0.7853981633974476
	       1.178097245096172 -1.570796326794896 -1.178097245096172
	       -0.7853981633974482 -0.392699081698724 1.224606353822377e-16
	       0.3926990816987243 0.7853981633974484 1.178097245096172
	       -1.570796326794897 -1.178097245096172 -0.7853981633974483
	       -0.3926990816987241 0 0.3926990816987241 0.7853981633974483
	       1.178097245096172 1.570796326794897 -1.178097245096172
	       -0.7853981633974484 -0.3926990816987243 -1.224606353822377e-16
	       0.392699081698724 0.7853981633974482 1.178097245096172
	       1.570796326794896 -1.178097245096172 -0.7853981633974476
	       -0.392699081698723 0))
nil

(number-test #'(lambda (x) (atan (sin x) (cos x))) r-long
	     '(0 0.392699081698723
	       0.7853981633974476 1.178097245096172 1.570796326794897
	       1.963495408493621 2.356194490192345 2.748893571891069
	       -3.141592653589793 -2.748893571891069 -2.356194490192345
	       -1.963495408493621 -1.570796326794897 -1.178097245096172
	       -0.7853981633974483 -0.3926990816987242 0 0.3926990816987242
	       0.7853981633974483 1.178097245096172 1.570796326794897
	       1.963495408493621 2.356194490192345 2.748893571891069
	       3.141592653589793 -2.748893571891069 -2.356194490192345
	       -1.963495408493621 -1.570796326794897 -1.178097245096172
	       -0.7853981633974476 -0.392699081698723 0))
nil

(safe-mapcar #'(lambda (x) (apply #'atan x))
	     '((0.0 1.0) (1.0 0.0) (0.0 -1.0) (-1.0 0.0)))
#.(list 0.0 (/ pi 2) pi (/ pi -2))

(number-test #'(lambda (x) (asinh (sinh x))) r-long r-long 1e-7)
nil

(number-test #'(lambda (x) (acosh (cosh x))) r-long (mapcar #'abs r-long) 1e-7)
nil

(number-test #'(lambda (x) (atanh (tanh x))) r-long r-long 1e-7)
nil

;; COMPLEX VALUES
(number-test #'exp z
	     '(#C(2.718281828459045 0) #C(2.086402233681255 1.139806735075716)
	       #C(1.068139482280095 1.25592988452917) #C(0.5403023058681398 0.8414709848078965)
	       #C(0.3929465558343552 0.4620307840711053) #C(0.3691288000469654 0.2016559825387079)
	       #C(0.3678794411714423 0) #C(0.3691288000469654 -0.2016559825387079)
	       #C(0.3929465558343552 -0.4620307840711053) #C(0.5403023058681398 -0.8414709848078965)
	       #C(1.068139482280095 -1.25592988452917) #C(2.086402233681255 -1.139806735075716)
	       #C(7.38905609893065 0) #C(3.053914887386167 4.756190636053822)
	       #C(-0.436437921247865 2.683016593282176) #C(-0.4161468365471424 0.9092974268256817)
	       #C(-0.05906544968727827 0.363106810580375) #C(0.0955909357304609 0.1488740617136101)
	       #C(0.1353352832366127 0) #C(0.0955909357304609 -0.1488740617136101)
	       #C(-0.05906544968727827 -0.363106810580375) #C(-0.4161468365471424 -0.9092974268256817)
	       #C(-0.436437921247865 -2.683016593282176) #C(3.053914887386167 -4.756190636053822)
	       #C(1.648721270700128 0) #C(1.493961999000881 0.3814711270561049)
	       #C(1.165517214154348 0.5387865015105857) #C(0.8775825618903728 0.479425538604203)
	       #C(0.7069219248074672 0.3267905322054773) #C(0.6283903349436082 0.1604543954012314)
	       #C(0.6065306597126334 0) #C(0.6283903349436082 -0.1604543954012314)
	       #C(0.7069219248074672 -0.3267905322054773) #C(0.8775825618903728 -0.479425538604203)
	       #C(1.165517214154348 -0.5387865015105857) #C(1.493961999000881 -0.3814711270561049)))
nil

(number-test #'sin z
	     '(#C(0.8414709848078965 0) #C(0.8589803343001378 0.3375964632228701)
	       #C(0.6707313588072117 0.8586367168171448) #C(0 1.175201193643801)
	       #C(-0.6707313588072117 0.8586367168171448) #C(-0.8589803343001378 0.3375964632228701)
	       #C(-0.8414709848078965 0) #C(-0.8589803343001378 -0.3375964632228701)
	       #C(-0.6707313588072117 -0.8586367168171448) #C(0 -1.175201193643801)
	       #C(0.6707313588072117 -0.8586367168171448) #C(0.8589803343001378 -0.3375964632228701)
	       #C(0.9092974268256817 -0) #C(1.523061701931275 -0.1886862357802933)
	       #C(2.452532348883716 1.479161975827853) #C(0 3.626860407847019)
	       #C(-2.452532348883716 1.479161975827853) #C(-1.523061701931275 -0.1886862357802933)
	       #C(-0.9092974268256817 -0) #C(-1.523061701931275 0.1886862357802933)
	       #C(-2.452532348883716 -1.479161975827853) #C(0 -3.626860407847019)
	       #C(2.452532348883716 -1.479161975827853) #C(1.523061701931275 0.1886862357802933)
	       #C(0.479425538604203 0) #C(0.4327885168580315 0.2292976446734403)
	       #C(0.2709627612286682 0.4327858320286366) #C(0 0.5210953054937474)
	       #C(-0.2709627612286682 0.4327858320286366) #C(-0.4327885168580315 0.2292976446734403)
	       #C(-0.479425538604203 0) #C(-0.4327885168580315 -0.2292976446734403)
	       #C(-0.2709627612286682 -0.4327858320286366) #C(0 -0.5210953054937474)
	       #C(0.2709627612286682 -0.4327858320286366) #C(0.4327885168580315 -0.2292976446734403)))
nil

(number-test #'cos z
	     '(#C(0.5403023058681398 -0) #C(0.7305430190572253 -0.3969495502290326)
	       #C(1.22776551686411 -0.4690753762685038) #C(1.543080634815244 -0)
	       #C(1.22776551686411 0.4690753762685038) #C(0.7305430190572253 0.3969495502290326)
	       #C(0.5403023058681398 0) #C(0.7305430190572253 -0.3969495502290326)
	       #C(1.22776551686411 -0.4690753762685038) #C(1.543080634815244 0)
	       #C(1.22776551686411 0.4690753762685038) #C(0.7305430190572253 0.3969495502290326)
	       #C(-0.4161468365471424 -0) #C(-0.2477516854675716 -1.1599548913509)
	       #C(1.574752911558314 -2.303658287170106) #C(3.762195691083631 -0)
	       #C(1.574752911558314 2.303658287170106) #C(-0.2477516854675716 1.1599548913509)
	       #C(-0.4161468365471424 0) #C(-0.2477516854675716 -1.1599548913509)
	       #C(1.574752911558314 -2.303658287170106) #C(3.762195691083631 0)
	       #C(1.574752911558314 2.303658287170106) #C(-0.2477516854675716 1.1599548913509)
	       #C(0.8775825618903728 -0) #C(0.9362195694809076 -0.1059979846525542)
	       #C(1.061176166972245 -0.1105083658274368) #C(1.127625965206381 -0)
	       #C(1.061176166972245 0.1105083658274368) #C(0.9362195694809076 0.1059979846525542)
	       #C(0.8775825618903728 0) #C(0.9362195694809076 -0.1059979846525542)
	       #C(1.061176166972245 -0.1105083658274368) #C(1.127625965206381 0)
	       #C(1.061176166972245 0.1105083658274368) #C(0.9362195694809076 0.1059979846525542)))
nil

(number-test #'tan z
	     '(#C(1.557407724654902 0) #C(0.7139308802460217 0.8500402971922751)
	       #C(0.2435601371571338 0.7924027564180361) #C(0 0.761594155955765)
	       #C(-0.2435601371571338 0.7924027564180361) #C(-0.7139308802460217 0.8500402971922751)
	       #C(-1.557407724654902 0) #C(-0.7139308802460217 -0.8500402971922751)
	       #C(-0.2435601371571338 -0.7924027564180361) #C(0 -0.761594155955765)
	       #C(0.2435601371571338 -0.7924027564180361) #C(0.7139308802460217 -0.8500402971922751)
	       #C(-2.185039863261519 0) #C(-0.1126421615750695 1.288976345282757)
	       #C(0.0583879435780107 1.024711771655234) #C(0 0.9640275800758169)
	       #C(-0.0583879435780107 1.024711771655234) #C(0.1126421615750695 1.288976345282757)
	       #C(2.185039863261519 0) #C(0.1126421615750695 -1.288976345282757)
	       #C(-0.0583879435780107 -1.024711771655234) #C(0 -0.9640275800758169)
	       #C(0.0583879435780107 -1.024711771655234) #C(-0.1126421615750695 -1.288976345282757)
	       #C(0.5463024898437905 0) #C(0.429043246429927 0.2934945744363713)
	       #C(0.2105871074424986 0.4297660306842928) #C(0 0.4621171572600097)
	       #C(-0.2105871074424986 0.4297660306842928) #C(-0.429043246429927 0.2934945744363713)
	       #C(-0.5463024898437905 0) #C(-0.429043246429927 -0.2934945744363713)
	       #C(-0.2105871074424986 -0.4297660306842928) #C(0 -0.4621171572600097)
	       #C(0.2105871074424986 -0.4297660306842928) #C(0.429043246429927 -0.2934945744363713)))
nil

(number-test #'sinh z
	     '(#C(1.175201193643801 0) #C(0.8586367168171447 0.6707313588072117)
	       #C(0.3375964632228701 0.8589803343001378) #C(0 0.8414709848078965)
	       #C(-0.3375964632228701 0.8589803343001378) #C(-0.8586367168171447 0.6707313588072117)
	       #C(-1.175201193643801 0) #C(-0.8586367168171447 -0.6707313588072117)
	       #C(-0.3375964632228701 -0.8589803343001378) #C(0 -0.8414709848078965)
	       #C(0.3375964632228701 -0.8589803343001378) #C(0.8586367168171447 -0.6707313588072117)
	       #C(3.626860407847019 0) #C(1.479161975827853 2.452532348883716)
	       #C(-0.1886862357802933 1.523061701931275) #C(-0 0.9092974268256817)
	       #C(0.1886862357802933 1.523061701931275) #C(-1.479161975827853 2.452532348883716)
	       #C(-3.626860407847019 0) #C(-1.479161975827853 -2.452532348883716)
	       #C(0.1886862357802933 -1.523061701931275) #C(-0 -0.9092974268256817)
	       #C(-0.1886862357802933 -1.523061701931275) #C(1.479161975827853 -2.452532348883716)
	       #C(0.5210953054937474 0) #C(0.4327858320286366 0.2709627612286681)
	       #C(0.2292976446734403 0.4327885168580315) #C(0 0.479425538604203)
	       #C(-0.2292976446734403 0.4327885168580315) #C(-0.4327858320286366 0.2709627612286681)
	       #C(-0.5210953054937474 0) #C(-0.4327858320286366 -0.2709627612286681)
	       #C(-0.2292976446734403 -0.4327885168580315) #C(0 -0.479425538604203)
	       #C(0.2292976446734403 -0.4327885168580315) #C(0.4327858320286366 -0.2709627612286681)))
nil
 
(number-test #'cosh z
	     '(#C(1.543080634815244 0) #C(1.22776551686411 0.4690753762685038)
	       #C(0.7305430190572252 0.3969495502290326) #C(0.5403023058681398 0)
	       #C(0.7305430190572252 -0.3969495502290326) #C(1.22776551686411 -0.4690753762685038)
	       #C(1.543080634815244 -0) #C(1.22776551686411 0.4690753762685038)
	       #C(0.7305430190572252 0.3969495502290326) #C(0.5403023058681398 -0)
	       #C(0.7305430190572252 -0.3969495502290326) #C(1.22776551686411 -0.4690753762685038)
	       #C(3.762195691083631 0) #C(1.574752911558314 2.303658287170106)
	       #C(-0.2477516854675716 1.1599548913509) #C(-0.4161468365471424 0)
	       #C(-0.2477516854675716 -1.1599548913509) #C(1.574752911558314 -2.303658287170106)
	       #C(3.762195691083631 -0) #C(1.574752911558314 2.303658287170106)
	       #C(-0.2477516854675716 1.1599548913509) #C(-0.4161468365471424 -0)
	       #C(-0.2477516854675716 -1.1599548913509) #C(1.574752911558314 -2.303658287170106)
	       #C(1.127625965206381 0) #C(1.061176166972245 0.1105083658274368)
	       #C(0.9362195694809075 0.1059979846525542) #C(0.8775825618903728 0)
	       #C(0.9362195694809075 -0.1059979846525542) #C(1.061176166972245 -0.1105083658274368)
	       #C(1.127625965206381 -0) #C(1.061176166972245 0.1105083658274368)
	       #C(0.9362195694809075 0.1059979846525542) #C(0.8775825618903728 -0)
	       #C(0.9362195694809075 -0.1059979846525542) #C(1.061176166972245 -0.1105083658274368)))
nil

(number-test #'tanh z
	     '(#C(0.761594155955765 0) #C(0.7924027564180361 0.2435601371571338)
	       #C(0.8500402971922751 0.7139308802460217) #C(0 1.557407724654902)
	       #C(-0.8500402971922751 0.7139308802460217) #C(-0.7924027564180361 0.2435601371571338)
	       #C(-0.761594155955765 0) #C(-0.7924027564180361 -0.2435601371571338)
	       #C(-0.8500402971922751 -0.7139308802460217) #C(0 -1.557407724654902)
	       #C(0.8500402971922751 -0.7139308802460217) #C(0.7924027564180361 -0.2435601371571338)
	       #C(0.9640275800758169 0) #C(1.024711771655234 0.0583879435780107)
	       #C(1.288976345282757 -0.1126421615750695) #C(0 -2.185039863261519)
	       #C(-1.288976345282757 -0.1126421615750695) #C(-1.024711771655234 0.0583879435780107)
	       #C(-0.9640275800758169 0) #C(-1.024711771655234 -0.0583879435780107)
	       #C(-1.288976345282757 0.1126421615750695) #C(0 2.185039863261519)
	       #C(1.288976345282757 0.1126421615750695) #C(1.024711771655234 -0.0583879435780107)
	       #C(0.4621171572600097 0) #C(0.4297660306842928 0.2105871074424986)
	       #C(0.2934945744363713 0.429043246429927) #C(0 0.5463024898437905)
	       #C(-0.2934945744363713 0.429043246429927) #C(-0.4297660306842928 0.2105871074424986)
	       #C(-0.4621171572600097 0) #C(-0.4297660306842928 -0.2105871074424986)
	       #C(-0.2934945744363713 -0.429043246429927) #C(0 -0.5463024898437905)
	       #C(0.2934945744363713 -0.429043246429927) #C(0.4297660306842928 -0.2105871074424986)))
nil

(number-test #'(lambda (x) (log (exp x))) z z)
nil

(number-test #'(lambda (x) (asin (sin x))) z
	     '(#C(1.0 0.0) #C(0.8660254037844386 0.5)
	       #C(0.5 0.8660254037844387) #C(0.0 1.0)
	       #C(-0.5 0.8660254037844387) #C(-0.8660254037844386 0.5)
	       #C(-1.0 -0.0) #C(-0.8660254037844386 -0.5)
	       #C(-0.5 -0.8660254037844386) #C(0.0 -1.0)
	       #C(0.5 -0.8660254037844386) #C(0.8660254037844386 -0.5)
	       #C(1.141592653589793 0.0) #C(1.409541846020916 -1.0)
	       #C(1.0 1.732050807568878) #C(0 2.0)
	       #C(-1.0 1.732050807568878) #C(-1.409541846020916 -1.0)
	       #C(-1.141592653589793 -0.0) #C(-1.409541846020916 1.0)
	       #C(-1.0 -1.732050807568877) #C(0.0 -2.0)
	       #C(1.0 -1.732050807568877) #C(1.409541846020916 1.0)
	       #C(0.5 0.0) #C(0.4330127018922193 0.25)
	       #C(0.25 0.4330127018922192) #C(0.0 0.5)
	       #C(-0.25 0.4330127018922192) #C(-0.4330127018922193 0.25)
	       #C(-0.5 -0.0) #C(-0.4330127018922193 -0.25)
	       #C(-0.25 -0.4330127018922192) #C(0.0 -0.5)
	       #C(0.25 -0.4330127018922192) #C(0.4330127018922193 -0.25)))
nil

(number-test #'(lambda (x) (acos (cos x))) z
	     '(#C(1.0 0.0) #C(0.8660254037844386 0.5)
	       #C(0.5 0.8660254037844387) #C(0 1)
	       #C(0.5 -0.8660254037844386) #C(0.8660254037844386 -0.5)
	       #C(1.0 0.0) #C(0.8660254037844386 0.5)
	       #C(0.5 0.8660254037844387) #C(0.0 1.0)
	       #C(0.5 -0.8660254037844386) #C(0.8660254037844386 -0.5)
	       #C(2.0 0.0) #C(1.732050807568877 1.0)
	       #C(1.0 1.732050807568878) #C(0.0 2.0)
	       #C(1.0 -1.732050807568877) #C(1.732050807568877 -1)
	       #C(2.0 0.0) #C(1.732050807568877 1)
	       #C(1.0 1.732050807568878) #C(0.0 2.0)
	       #C(1.0 -1.732050807568877) #C(1.732050807568877 -1.0)
	       #C(0.5 0.0) #C(0.4330127018922192 0.25)
	       #C(0.25 0.4330127018922192) #C(0.0 0.5)
	       #C(0.25 -0.4330127018922192) #C(0.4330127018922191 -0.25)
	       #C(0.5 0) #C(0.4330127018922192 0.25)
	       #C(0.25 0.4330127018922192) #C(0 0.5)
	       #C(0.25 -0.4330127018922192) #C(0.4330127018922191 -0.25)))
nil

(number-test #'(lambda (x) (atan (tan x))) z
	     '(#C(1 0) #C(0.8660254037844386 0.5)
	       #C(0.5 0.8660254037844386) #C(0 1)
	       #C(-0.5 0.8660254037844386) #C(-0.8660254037844386 0.5)
	       #C(-1 -0) #C(-0.8660254037844386 -0.5)
	       #C(-0.5 -0.8660254037844386) #C(0 -1)
	       #C(0.5 -0.8660254037844386) #C(0.8660254037844386 -0.5)
	       #C(-1.141592653589793 -0) #C(-1.409541846020916 1)
	       #C(1 1.732050807568877) #C(0 2)
	       #C(-1 1.732050807568877) #C(1.409541846020916 1)
	       #C(1.141592653589793 0) #C(1.409541846020916 -1)
	       #C(-1 -1.732050807568877) #C(0 -2)
	       #C(1 -1.732050807568877) #C(-1.409541846020916 -1)
	       #C(0.5 0) #C(0.4330127018922193 0.25)
	       #C(0.25 0.4330127018922193) #C(0 0.5)
	       #C(-0.25 0.4330127018922193) #C(-0.4330127018922193 0.25)
	       #C(-0.5 -0) #C(-0.4330127018922193 -0.25)
	       #C(-0.25 -0.4330127018922193) #C(0 -0.5)
	       #C(0.25 -0.4330127018922193) #C(0.4330127018922193 -0.25)))
nil

(number-test #'(lambda (x) (asinh (sinh x))) z
	     '(#C(1.0 0.0) #C(0.8660254037844386 0.5)
	       #C(0.5 0.8660254037844385) #C(0.0 1.0)
	       #C(-0.5 0.8660254037844386) #C(-0.8660254037844389 0.5)
	       #C(-1 0) #C(-0.8660254037844389 -0.5)
	       #C(-0.5 -0.8660254037844386) #C(0.0 -1.0)
	       #C(0.5 -0.8660254037844385) #C(0.8660254037844386 -0.5)
	       #C(2.0 0.0) #C(1.732050807568877 1.0)
	       #C(-1 1.409541846020916) #C(0.0 1.141592653589793)
	       #C(1 1.409541846020916) #C(-1.732050807568878 1.0)
	       #C(-2.0 0) #C(-1.732050807568878 -1.0)
	       #C(1.0 -1.409541846020916) #C(0.0 -1.141592653589793)
	       #C(-1.0 -1.409541846020916) #C(1.732050807568877 -1.0)
	       #C(0.5 0.0) #C(0.4330127018922192 0.25)
	       #C(0.25 0.4330127018922193) #C(0.0 0.5)
	       #C(-0.25 0.4330127018922193) #C(-0.4330127018922192 0.25)
	       #C(-0.5 0) #C(-0.4330127018922192 -0.25)
	       #C(-0.25 -0.4330127018922193) #C(0 -0.5)
	       #C(0.25 -0.4330127018922193) #C(0.4330127018922192 -0.25)))
nil

(number-test #'(lambda (x) (acosh (cosh x))) z
	     '(#C(1.0 0.0) #C(0.8660254037844385 0.5)
	       #C(0.5 0.8660254037844387) #C(0.0 1.0)
	       #C(0.5 -0.8660254037844387) #C(0.8660254037844385 -0.5)
	       #C(1.0 0.0) #C(0.8660254037844385 0.5)
	       #C(0.5 0.8660254037844387) #C(0.0 1.0)
	       #C(0.5 -0.8660254037844387) #C(0.8660254037844385 -0.5)
	       #C(2.0 0.0) #C(1.732050807568877 1.0)
	       #C(1.0 1.732050807568877) #C(0.0 2.0)
	       #C(1.0 -1.732050807568877) #C(1.732050807568877 -1.0)
	       #C(2.0 0.0) #C(1.732050807568877 1.0)
	       #C(1.0 1.732050807568877) #C(0.0 2.0)
	       #C(1.0 -1.732050807568877) #C(1.732050807568877 -1.0)
	       #C(0.5 0.0) #C(0.4330127018922192 0.25)
	       #C(0.25 0.4330127018922194) #C(0.0 0.5)
	       #C(0.25 -0.4330127018922194) #C(0.4330127018922192 -0.25)
	       #C(0.5 0) #C(0.4330127018922192 0.25)
	       #C(0.25 0.4330127018922194) #C(0.0 0.5)
	       #C(0.25 -0.4330127018922194) #C(0.4330127018922192 -0.25)))
nil

(number-test #'(lambda (x) (atanh (tanh x))) z
	     '(#C(1 0) #C(0.8660254037844386 0.5)
	       #C(0.5 0.8660254037844386) #C(0 1)
	       #C(-0.5 0.8660254037844386) #C(-0.8660254037844386 0.5)
	       #C(-1 0) #C(-0.8660254037844386 -0.5)
	       #C(-0.5 -0.8660254037844386) #C(0 -1)
	       #C(0.5 -0.8660254037844386) #C(0.8660254037844386 -0.5)
	       #C(2 0) #C(1.732050807568877 1)
	       #C(1 -1.409541846020916) #C(0 -1.141592653589793)
	       #C(-1 -1.409541846020916) #C(-1.732050807568877 1)
	       #C(-2 0) #C(-1.732050807568877 -1)
	       #C(-1 1.409541846020916) #C(0 1.141592653589793)
	       #C(1 1.409541846020916) #C(1.732050807568877 -1)
	       #C(0.5 0) #C(0.4330127018922193 0.25)
	       #C(0.25 0.4330127018922193) #C(0 0.5)
	       #C(-0.25 0.4330127018922193) #C(-0.4330127018922193 0.25)
	       #C(-0.5 0) #C(-0.4330127018922193 -0.25)
	       #C(-0.25 -0.4330127018922193) #C(0 -0.5)
	       #C(0.25 -0.4330127018922193) #C(0.4330127018922193 -0.25))
	     1e-7)
nil
