@node Removed features
@section Removed features

@c @menu
@c * In-house DFFI:: Hand-written FFI assembly
@c * In-house GC:: ECL's own GC
@c * Green threads:: Lightweight processes
@c * Compiler newcmp:: Experimental compiler architecture
@c * In-house bignum implementation::
@c * Possibility to build without bignums::
@c @end menu

@c @node In-house DFFI
@subsection In-house DFFI

Commit @code{10bd3b613fd389da7640902c2b88a6e36088c920}. Native DFFI was
replaced by a @code{libffi} long time ago, but we have maintained the
code as a fallback. Due to small number of supported platforms and no
real use it has been removed in 2016.

@c @node In-house GC
@subsection In-house GC

Currently broken GC is present in files @code{src/c/alloc.d} and
@code{src/c/gbc.d}. Native GC is replaced by a @code{boehm gc}.It is
planned in an indefinite future to add the native GC back as a fallback
for unsupported platforms.

@c @node Green threads
@subsection Green threads

Commit @code{41923d5927f31f4dd702f546b9caee74e98a2080}. Green threads
(aka light weight processes) has been replaced with native threads
implementation. There is an ongoing effort to bring them back as an
alternative interface.

@c @node Compiler newcmp
@subsection Compiler newcmp

This was abandoned effort of changing the compiler architecture. Sources
reside in @code{src/newcmp} directory, but they doesn't build nor were
updated for a long time. This interface will be probably removed soon.

@subsection Old MIT loop
Commit @code{5042589043a7be853b7f85fd7a996747412de6b4}. This old loop
implementation has got superseeded by the one incorporated from
Symbolics LOOP in 2001.
