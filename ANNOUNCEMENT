Announcement of ECL
===================

ECL stands for Embeddable Common-Lisp. The ECL project aims to
produce an implementation of the Common-Lisp language which complies
to the ANSI X3J13 definition of the language.

The term embeddable refers to the fact that ECL includes a lisp to C
compiler, which produces libraries (static or dynamic) that can be
called from C programs. Furthermore, ECL can produce standalone
executables from your lisp code and can itself be linked to your
programs as a shared library.

ECL supports the operating systems Linux, FreeBSD, NetBSD, OpenBSD,
Solaris (at least v. 9), Microsoft Windows and OSX, running on top of
the Intel, Sparc, Alpha and PowerPC processors. Porting to other
architectures should be rather easy.

ECL is currently hosted at SourceForge. The home page of the project
is http://ecls.sourceforge.net, and in it you will find source code
releases, a CVS tree and some useful documentation.


Known issues
============

ECL builds fine on all supported platforms, but there are two types
of issues with Windows:

* Mingw32's latest compiler, gcc-4.6.2, miscompiles several files and
  breaks down while building ECL. This is not due to wrong C code but
  a problem in that version of GCC. The solution is to install an
  older version of GCC. It suffices with gcc-core, g++ and libgcc
  http://sourceforge.net/projects/mingw/files/MinGW/Base/gcc/Version4/gcc-4.5.2-1/

* Cygwin's fork routine is very fragile. Unfortunately it is the only
  mean that ECL has to implement EXT:RUN-PROGRAM on that platform.


Changes since last release
==========================

See file src/CHANGELOG or browse it online

http://ecls.cvs.sourceforge.net/viewvc/ecls/ecl/src/CHANGELOG?view=markup

;;; Local Variables: ***
;;; mode:text ***
;;; fill-column:69 ***
;;; End: ***
